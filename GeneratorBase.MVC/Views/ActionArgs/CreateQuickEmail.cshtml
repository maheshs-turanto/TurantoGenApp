@model GeneratorBase.MVC.Models.ActionArgs
@{
    ViewBag.Title = "Create Action Args";
    Layout = null;
    Type controller = Type.GetType("GeneratorBase.MVC.Controllers.NotificationController, GeneratorBase.MVC.Controllers");

}
@Scripts.Render("~/bundles/jqueryval")
<link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<link href="@Url.Content("~/Content/chosen.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/Common2/bootstrap-multiselect.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/bootstrap-multiselect.css")" rel="stylesheet" type="text/css" />Noti
<link href='@Url.Content("~/Scripts/summernote.css")' rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/summernote.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#AlertMessageArg').summernote('focus');
    })
</script>
<script type="text/javascript" language="javascript">
    $(document).ready(function () {
        if ("@ViewBag.NotifyRoleListArgs" != null) {
            var pramname = "@ViewBag.NotifyRoleListArgs".split(",");
            var PropNameEle = document.getElementById("NotifyRoleListArg");
            for (i = 0; i < pramname.length; i++) {
                if (pramname[i] == "")
                    break;
                for (var o = 0; o < PropNameEle.options.length; o++) {
                    if (PropNameEle.options[o].value == pramname[i]) {
                        var chunk = $.trim(pramname[i]);
                        for (var o = 0; o < PropNameEle.options.length; o++) {
                            if ($.trim(PropNameEle.options[o].value) == chunk) {
                                PropNameEle.options[o].selected = true;
                            }
                        }
                    }
                }
                $("#" + PropNameEle.id).multiselect('refresh');
            }
        }
        if ("@ViewBag.NotifyToArgs" != null) {
            var pramnameNotifyTo = "@ViewBag.NotifyToArgs".split(",");
            var PropNameEleNotifyTo = document.getElementById("cmbNotifyToArg");
            for (i = 0; i < pramnameNotifyTo.length; i++) {
                if (pramnameNotifyTo[i] == "")
                    break;
                for (var o = 0; o < PropNameEleNotifyTo.options.length; o++) {
                    if (PropNameEleNotifyTo.options[o].value == pramnameNotifyTo[i]) {
                        var chunk = $.trim(pramnameNotifyTo[i]);
                        for (var o = 0; o < PropNameEleNotifyTo.options.length; o++) {
                            if ($.trim(PropNameEleNotifyTo.options[o].value) == chunk) {
                                PropNameEleNotifyTo.options[o].selected = true;
                            }
                        }
                    }
                }
                $("#" + PropNameEleNotifyTo.id).multiselect('refresh');
            }
        }
    });
    selectedNotifyToArgListArg = ($('#cmbNotifyToArg option:selected'));
    $(selectedNotifyToArgListArg).each(function (index, prop) {
        if (index == 0) {
            $("#NotifyToArg").val([$(this).val()]);
        }
        else {
            $("#NotifyToArg").val($("#NotifyToArg").val() + "," + [$(this).val()]);
        }
    });
    selectedNotifyRoleListArg = ($('#NotifyRoleListArg option:selected'));
    $(selectedNotifyRoleListArg).each(function (index, prop) {
        if (index == 0) {
            $("#NotifyToRoleArg").val([$(this).val()]);
        }
        else {
            $("#NotifyToRoleArg").val($("#NotifyToRoleArg").val() + "," + [$(this).val()]);
        }
    });
</script>
@using (Html.BeginForm("CreateQuickEmail", "ActionArgs", new
{
    HostingEntityID = ViewBag.HostingEntityID,
    HostingEntityName = ViewBag.HostingEntityName,
    UrlReferrer = ViewBag.UrlReferrer,
    ActionTypeId = ViewBag.ActionTypeId,
    BusinessRuleId = ViewBag.BusinessRuleId,
    EntityNameRuleAction = ViewBag.EntityNameRuleAction,
}, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken();
                            Html.ValidationSummary(true);
                            Html.EnableClientValidation();
                            <style>
                                .multiselectFix {
                                    height: 29px !important;
                                }

                                .form-group {
                                    margin-bottom: 8px;
                                }
                                .note-editor.note-frame .note-editing-area .note-editable {
                                min-height:75px;
                                }
                            </style>
                            <div class="AppForm" style="border:0px; padding:0px;">

                                <div style="border:0px; padding:0px; border:0px">

                                    <div class="row form-group">
                                        <div class='col-sm-4'>
                                            <label>Notify within days<span class="text-danger-reg">*</span></label>
                                            @Html.TextBox("TimeValueArg", null, new { @placeholder = "Days within to notify, 0 for immediate", @required = "required", @class = "form-control" })
                                        </div>


                                        <div class='col-sm-8' name="dvNotifyTo" id="dvNotify">
                                            <label>Notify to <span class="text-danger-reg">*</span></label>
                                            @Html.DropDownList("cmbNotifyToArg", null, new { @multiple = "multiple" })
                                            @Html.TextBox("NotifyToArg", null, new { style = "border:none !important;Width:0px !important; display:none;" })
                                        </div>
                                    </div>



                                    <div class='form-group'>
                                        <label>Specify extra email-ids </label>
                                        @Html.TextArea("NotifyToExtraArg", null, new { @placeholder = "Notify some these people also", @class = "form-control",@style="height:75px;" })
                                    </div>


                                    <div class='form-group' name="dvNotifyRoleTo" id="dvRoleNotify">
                                        <label>Notify to Roles <span class="text-danger-reg"></span></label>
                                        @Html.TextBox("NotifyToRoleArg", null, new { @class = "form-control hidden", @style = "display:none;" })
                                        @Html.DropDownList("NotifyRoleListArg", null, new { @multiple = "multiple" })
                                    </div>

                                    @if (controller != null)
                                    {

                                        <div class='row'>
                                            <div class='col-sm-6' style="padding-left:8px">
                                                <div class='form-group'>
                                                    @Html.CheckBox("IsEmailNotification", new { @class = "tcheckbox " }) <label>Enable Email Notification </label>

                                                </div>
                                            </div>
                                            <div class='col-sm-6'>
                                                <div class='form-group'>
                                                    @Html.CheckBox("IsWebNotification", new { @class = "tcheckbox " }) <label>Enable System Notification </label>
                                                    
                                                </div>
                                            </div>
                                        </div>
                                    }

                                    <div class='form-group'>
                                        <label>Notification Message</label>
                                        @Html.TextArea("AlertMessageArg", null, new { @placeholder = "Alert Message for notification", @class = "form-control",@style="height:75px" })
                                    </div>
									<div class="or-lg">OR</div>
            <div style="position:relative;">
                <a class='btn btn-primary btnupload' href='javascript:;' style="float:left; margin-right:5px;">
                    Upload File
                    <input id="Template" type="file" style='position:absolute;z-index:2;top:0;left:0;filter: alpha(opacity=0);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";opacity:0;background-color:transparent;color:transparent;width:105px;' name="Template" onchange='uploadedFileName("upload-file-infoTemplate",$(this).val());'>
                </a>
                &nbsp;
                <span class='label uploadlblFix' id="upload-file-infoTemplate"></span>
                <br />
                <br />
                @if (ViewBag.TemplateId != null && long.Parse(Convert.ToString(ViewBag.TemplateId)) > 0)
                {<a href="@Url.Action("Download", "Document", new { id = ViewBag.TemplateId })" class="small pull-left" style="vertical-align:middle;font-size: 11px;" id='@Html.Raw("adownloadEditTemplate"+ViewBag.TemplateId)'></a>
                    if (User.CanDelete("Document"))
                    {
                        <a id='@Html.Raw("aDeleteTemplate"+ViewBag.TemplateId)' onclick="DocumentDeassociate('@Url.Action("DocumentDeassociate", "Document", new { docid = ViewBag.TemplateId })', '@ViewBag.TemplateId','Template');"><i class="fa fa-times text-danger" style="margin-left:5px;"></i></a>
                    }
                    <script>
                        displayDocumentNameEdit('@Url.Action("GetDocumentName", "Document", new { id = ViewBag.TemplateId })', '@ViewBag.TemplateId', 'Template');
                    </script>
                }

            </div>
                                </div>


                            </div>

                            <button type="button" class="btn btn-default btn-sm" data-dismiss="modal" aria-hidden="true">Cancel</button>
                            @*@Html.ActionLink("Cancel", "Cancel", new { UrlReferrer = ViewData["ActionArgsParentUrl"] }, new { @onclick = "", @class = "btn btn-default btn-sm" })*@
                            <input type="submit" value="Create" class="btn btn-primary btn-sm" />
}
@Scripts.Render("~/bundles/jqueryval")
<link href="@Url.Content("~/Content/bootstrap-multiselect.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/Common2/bootstrap-multiselect.js")" type="text/javascript"></script>
<script type="text/javascript">
    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: "95%" }
    }
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
</script>
<script>
    $(document).ready(function () {
        $('#cmbNotifyToArg').multiselect({
            buttonWidth: '100%'
        });
        $('#NotifyRoleListArg').multiselect({
            buttonWidth: '100%'
        });
    });
</script>
<script>
    $("form").submit(function (event) {
        try {
            //var IsWebNotification = $("#IsWebNotification") != undefined ? $("#IsWebNotification").is(':checked') : false;
            //if (($('#NotifyRoleListArg').val() == null || $('#NotifyRoleListArg').val().length == 0) && IsWebNotification ) {
            //    alert("Please Select Notify to Roles.");
            //    $(this).find(':submit').removeAttr('disabled');
            //    event.preventDefault();
            //    return false;
            //}
            //else {
                $('#NotifyToArg').val(($('#cmbNotifyToArg').val()));
                $('#NotifyToRoleArg').val(($('#NotifyRoleListArg').val()));
				
				if (($("#AlertMessage").val() == undefined || $("#AlertMessage").val() == null || $("#AlertMessage").val() == "") && ($("#Template").val() == undefined || $("#Template").val() == null || $("#Template").val() == "")) {

                $('#dvalert').attr("class", "modal fade show");
                $('#dvalert').attr("aria-hidden", "false");
                $('#dvalert').attr("style", "display:block;");
                $('#alertbody').html("<li>Provide required Notification Message to add action !</li>");
                return false;
            }
            //}
        } catch (ex) { }
        if ($(this).find('.input-validation-error').length == 0) {
            $(this).find(':submit').attr('disabled', 'disabled');
        }
    });
</script>
