@model GeneratorBase.MVC.Models.T_DocumentTemplate
@using PagedList;
@{
    ViewBag.Title = "View Document Template";
	var EntityDisplayNameReflector = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_DocumentTemplate");
    var EntityDisplayName = EntityDisplayNameReflector != null ? EntityDisplayNameReflector.DisplayName : "Document Template";
	List<string> hiddenProperties = new List<string>();
    if (User.businessrules.Any(p => p.EntityName == "T_DocumentTemplate" && p.ActionTypeID.Contains(6)))
    {
        hiddenProperties = Model.ApplyHiddenRule(User.businessrules, "T_DocumentTemplate", true);
    }
	var backUrl = Request.UrlReferrer != null ?  Request.UrlReferrer.PathAndQuery : "";
		}
<script>
    $(document).ready(function () {
			 if ($.cookie('@User.JavaScriptEncodedName@Model.Id' + 'TabCookie') != null) {
				$('a[href="#' + $.cookie('@User.JavaScriptEncodedName@Model.Id' + 'TabCookie') + '"]').click();
			 }
			 $("[inlinegrid]").each(function() {
                $(this).click();
            });
    });
</script>
@{
    if (!string.IsNullOrEmpty(ViewBag.T_DocumentTemplateIsHiddenRule))
    {
        @Html.Raw(ViewBag.T_DocumentTemplateIsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.T_DocumentTemplateIsGroupsHiddenRule))
    {
        @Html.Raw(ViewBag.T_DocumentTemplateIsGroupsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.T_DocumentTemplateIsSetValueUIRule))
    {
        @Html.Raw(ViewBag.T_DocumentTemplateIsSetValueUIRule);
    }
}
<div>
<style>
.formbuttonfix {
    margin-right: 4px;
   
}

.CEntityCount {
display:none !important;
}
</style>
<div class="content-heading">
    <strong><a href="@Url.Action("Index")">@EntityDisplayName</a>
	<small>Details - <span class="EntityDisplayName"> @Html.DisplayFor(model => model.DisplayValue)</span></span>
	</small>
	</strong>
    <div class="ml-auto">

			<ul class="dropdown-menu pull-left">               
				<li>
                    @if ( User.CanEdit("T_DocumentTemplate"))
                    {
                        <a href="@Url.Action("Edit","T_DocumentTemplate", new {UrlReferrer = backUrl,id = Model.Id,AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) },null)"><i class="fa fa-edit"></i>  Edit</a>
                    }
                </li>             
				<li>
                    @if ( User.CanDelete("T_DocumentTemplate"))
                    {
                        <a href="@Url.Action("Delete", "T_DocumentTemplate", new { UrlReferrer = backUrl,id = Model.Id, AssociatedType=ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null)"><i class="fa fa-remove-sign"></i>  Delete</a>
                    }
                </li>
			</ul>
   </div>
</div>
</div>
	<div class="wrapper wrapper-content animated fadeInRight ecommerce">
            <div class="tabs-container card card-body">
    <ul class="nav nav-tabs tabellipsis">
	 <li class="nav-item">
	 <a class="nav-link active" href="#Details" onclick="ClearTabCookie('@User.JavaScriptEncodedName@Model.Id');" data-toggle="tab" title="Details">Details</a>
	 </li>

 @if (User.CanView("JournalEntry"))
        {
		 <li class="nav-item">
		 <a class="nav-link" onclick="LoadTab('JournalEntryToT_DocumentTemplateRelation','@User.JavaScriptEncodedName@Model.Id','@Url.Action("Index", "JournalEntry", new { RenderPartial = true, RelatedEntityRecords = "T_DocumentTemplate", HostingEntity = "T_DocumentTemplate", HostingEntityID = @Model.Id, AssociatedType = "JournalEntry", TabToken = DateTime.Now.Ticks })')" href="#JournalEntryToT_DocumentTemplateRelation" data-toggle="tab" title="Document Template Journal">Document Template Journal</a>
		 </li>
		 }

    </ul>
	  @Html.HiddenFor(model => model.Id)
	    <div class="tab-content">
		   <div class="tab-pane fade show active" id="Details">
				 <div class="AppForm">
					<div class="">

<div class="row">
				<div class="col-sm-12 col-md-12 col-xs-12" id="accordion">
			<div class="card card-default" id="dvGroupT_DocumentTemplateBasicInformation">
                <div class="card-header clearfix">
					
											
									<h3 class="card-title">Basic Information</h3>
								</div>
                                <div class="card-body row">
                                  

@if(User.CanView("T_DocumentTemplate","T_AutoNo")  && !hiddenProperties.Contains("T_AutoNo") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_AutoNo">
	<div class='form-group' title="@Model.T_AutoNo">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_AutoNo) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
						<p id="lblT_AutoNo" class="viewlabel">@Model.T_AutoNo</p>
								</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_EntityName")  && !hiddenProperties.Contains("T_EntityName") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_EntityName">
	<div class='form-group' title="@Model.T_EntityName">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_EntityName) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
						<p id="lblT_EntityName" class="viewlabel">@Model.T_EntityName</p>
								</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_Name")  && !hiddenProperties.Contains("T_Name") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Name">
	<div class='form-group' title="@Model.T_Name">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_Name) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
						<p id="lblT_Name" class="viewlabel">@Model.T_Name</p>
								</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_Description")  && !hiddenProperties.Contains("T_Description"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Description">
	<div class='form-group' title="@Model.T_Description">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_Description)</label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		<p class="viewlabelmultiline">@Model.T_Description</p>
		</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_Document") && User.CanView("Document") && !hiddenProperties.Contains("T_Document"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Document">
	<div class='form-group' title="Document">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_Document)</label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		<p class="text-primary">
		@if(Model.T_Document > 0)
		{
			<a href="@Url.Action("Download", "Document", new { id = Model.T_Document })" id='@Html.Raw("adownloadDetailT_Document"+Model.Id)'></a>
			<script>
				displayDocumentNameDetail('@Url.Action("GetDocumentName", "Document", new { id = Model.T_Document})', '@Model.Id','T_Document')
            </script>
	    }
		else{<label>NA</label>}
		</p>
		</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_DocumentType")  && !hiddenProperties.Contains("T_DocumentType") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DocumentType">
	<div class='form-group' title="@Model.T_DocumentType">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_DocumentType) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
						<p id="lblT_DocumentType" class="viewlabel">@Model.T_DocumentType</p>
								</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_ActionType")  && !hiddenProperties.Contains("T_ActionType") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ActionType">
	<div class='form-group' title="@Model.T_ActionType">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_ActionType) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
						<p id="lblT_ActionType" class="viewlabel">@Model.T_ActionType</p>
								</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_DefaultOutputFormat")  && !hiddenProperties.Contains("T_DefaultOutputFormat") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DefaultOutputFormat">
	<div class='form-group' title="@Model.T_DefaultOutputFormat">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_DefaultOutputFormat) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
						<p id="lblT_DefaultOutputFormat" class="viewlabel">@Model.T_DefaultOutputFormat</p>
								</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_AllowedRoles")  && !hiddenProperties.Contains("T_AllowedRoles") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_AllowedRoles">
	<div class='form-group' title="@Model.T_AllowedRoles">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_AllowedRoles) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
						<p id="lblT_AllowedRoles" class="viewlabel">@Model.T_AllowedRoles</p>
								</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_AttachDocumentTo")  && !hiddenProperties.Contains("T_AttachDocumentTo") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_AttachDocumentTo">
	<div class='form-group' title="@Model.T_AttachDocumentTo">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_AttachDocumentTo) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
						<p id="lblT_AttachDocumentTo" class="viewlabel">@Model.T_AttachDocumentTo</p>
								</div>
	</div>
</div>
}
 
			</div>
        </div>
	</div>
	</div>
<div class="row">
				<div class="col-sm-12 col-md-12 col-xs-12" id="accordion">
			<div class="card card-default" id="dvGroupT_DocumentTemplateUIInformation">
                <div class="card-header clearfix">
					
											
									<h3 class="card-title">UI Information</h3>
								</div>
                                <div class="card-body row">
                                  

@if(User.CanView("T_DocumentTemplate","T_DisplayType")  && !hiddenProperties.Contains("T_DisplayType") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DisplayType">
	<div class='form-group' title="@Model.T_DisplayType">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_DisplayType) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
						<p id="lblT_DisplayType" class="viewlabel">@Model.T_DisplayType</p>
								</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_DisplayOrder")  && !hiddenProperties.Contains("T_DisplayOrder") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_DisplayOrder">
	<div class='form-group' title="@Model.T_DisplayOrder">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_DisplayOrder) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
						<p id="lblT_DisplayOrder" class="viewlabel">@Model.T_DisplayOrder</p>
								</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_ToolTip")  && !hiddenProperties.Contains("T_ToolTip") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_ToolTip">
	<div class='form-group' title="@Model.T_ToolTip">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_ToolTip) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
						<p id="lblT_ToolTip" class="viewlabel">@Model.T_ToolTip</p>
								</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_BackGroundColor")  && !hiddenProperties.Contains("T_BackGroundColor") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_BackGroundColor">
	<div class='form-group' title="@Model.T_BackGroundColor">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_BackGroundColor) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
						<p id="lblT_BackGroundColor" class="viewlabel">@Model.T_BackGroundColor</p>
								</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_FontColor")  && !hiddenProperties.Contains("T_FontColor") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_FontColor">
	<div class='form-group' title="@Model.T_FontColor">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_FontColor) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
						<p id="lblT_FontColor" class="viewlabel">@Model.T_FontColor</p>
								</div>
	</div>
</div>
}
@if(User.CanView("T_DocumentTemplate","T_Disable")  && !hiddenProperties.Contains("T_Disable") )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_Disable">
	<div class='form-group' title="@Model.T_Disable">
		<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_Disable) </label>
		<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
		
				@Html.DisplayFor(model => model.T_Disable)
		</div>
	</div>
</div>
}
 
			</div>
        </div>
	</div>
	</div>
<div class="row">
				<div class="col-sm-12 col-md-12 col-xs-12" id="accordion">
			<div class="card card-default" id="dvGroupT_DocumentTemplateForInternalUseOnly">
                <div class="card-header clearfix">
					
											
									<h3 class="card-title">For Internal Use Only</h3>
								</div>
                                <div class="card-body row">
                                  

						@if(User.CanView("T_DocumentTemplate","T_RecordAdded") && !hiddenProperties.Contains("T_RecordAdded"))
						{
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_RecordAdded">
							<div class='form-group' title="@(Model.T_RecordAddedInsertDate.HasValue ? Model.T_RecordAddedInsertDate.Value.ToString("MM/dd/yyyy hh:mm tt"):"") @Model.T_RecordAddedInsertBy">
								<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_RecordAddedInsertDate)</label>
								<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
								<p class="viewlabel" id="tsT_RecordAddedInsertDate">@(Model.T_RecordAddedInsertDate.HasValue ? Model.T_RecordAddedInsertDate.Value.ToString("MM/dd/yyyy hh:mm tt"):"") @Model.T_RecordAddedInsertBy</p>
								</div>
							</div>
						</div>
						<div class='col-sm-6 col-md-6 col-xs-12' id="dvT_RecordAdded">
							<div class='form-group' title="@(Model.T_RecordAdded.HasValue ? Model.T_RecordAdded.Value.ToString("MM/dd/yyyy hh:mm tt"):"") @Model.T_RecordAddedUser">
								<label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.DisplayNameFor(model => model.T_RecordAdded)</label>
								<div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
								<p class="viewlabel" id="tsT_RecordAdded">@(Model.T_RecordAdded.HasValue ? Model.T_RecordAdded.Value.ToString("MM/dd/yyyy hh:mm tt"):"") @Model.T_RecordAddedUser</p>
								</div>
							</div>
						</div>
						}
						 
			</div>
        </div>
	</div>
	</div>
				</div>
			</div>
			<div class="row">
				<div class="col-md-12 col-sm-12 col-xs-12">
				<a class="btn btn-white btn-sm pull-left formbuttonfix" Onclick="goBack('@Url.Action("Index","T_DocumentTemplate")');">Back</a>
				@*@Html.ActionLink("Back", "Cancel", new { UrlReferrer = backUrl }, new { @class = "btn btn-white btn-sm pull-left formbuttonfix" })*@
					 @if ( User.CanEdit("T_DocumentTemplate"))
                     {
                          @Html.ActionLink("Edit", "Edit", new { UrlReferrer = backUrl, id = Model.Id, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, new { @class = "btn btn-primary btn-sm pull-left formbuttonfix" })
                     }
 @{ var dropmenubottom = false; }
<div class="dropdown pull-left formbuttonfix" style="display:none;" id="AddAssociationdropmenubottomT_DocumentTemplate">
<button type="button" class="btn btn-primary btn-sm dropdown-toggle" id="dropdownMenu1" data-toggle="dropdown">
            Add 
            <span class="caret"></span>
        </button>
		 <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
</ul>
</div>
@if(!dropmenubottom)
{
    <script>
        $("#AddAssociationdropmenubottomT_DocumentTemplate").hide();
    </script>
}
			</div> 
			</div><div class="clearfix" style="clear:both"></div>
	</div>    
<div class="tab-pane fade in" id="JournalEntryToT_DocumentTemplateRelation">
</div>
 	</div> <!-- /tab-content -->
</div>
</div>
<script type='text/javascript'>
    $(document).ready(function ()
    {
		ShowHelpIcon(@Html.Raw("'"+Url.Action("ShowHelpIcon", "PropertyHelpPage")+"'"),'T_DocumentTemplate','details',false,'Document Template')
    });
	</script>
	
 
