@using Microsoft.AspNet.Identity
@model GeneratorBase.MVC.Models.ManageUserViewModel
@{

    var msg = String.IsNullOrEmpty(ViewBag.StatusMessage) ? "" : ViewBag.StatusMessage;
    var changemsg = String.IsNullOrEmpty(ViewBag.ChangeMessage) ? "" : ViewBag.ChangeMessage;

    var validationDictionary = ViewBag.validationDictionary;

    string RequiredLengthMessage = ViewBag.RequiredLengthMessage;
    string RequireSpecialCharacterMessage = ViewBag.RequireSpecialCharacterMessage;
    string RequireDigitMessage = ViewBag.RequireDigitMessage;
    string RequireLowercaseMessage = ViewBag.RequireLowercaseMessage;
    string RequireUppercaseMessage = ViewBag.RequireUppercaseMessage;

}



<div class="content-heading">
    <div class="TitleName"><a href="#">Change Password</a></div>

</div>

<div class="AppForm">

    <div class="card">

        <div class="card-header clearfix">
            <h3 class="card-title">Change Password Form</h3>
        </div>
        <div class="card-body">
            @if (ViewBag.token == null)
            {
                <div class="alert alert-warning">You're logged in as <strong>@User.Identity.Name</strong></div>
            }
            <span id='lblMsg'>@msg</span>

            <div class="col-md-6">
                <p>Your password must:</p>
                <ul class="pwd-restrictions">
                    @if (!string.IsNullOrEmpty(RequiredLengthMessage))
                    {
                        <li id="LengthValidation">@RequiredLengthMessage</li>
                    }
                    @if (!string.IsNullOrEmpty(RequireDigitMessage))
                    {
                        <li id="PasswordRequireDigit">@RequireDigitMessage</li>
                    }
                    @if (!string.IsNullOrEmpty(RequireSpecialCharacterMessage))
                    {
                        <li id="SpecialCharacterValidation">@RequireSpecialCharacterMessage</li>
                    }
                    @if (!string.IsNullOrEmpty(RequireLowercaseMessage))
                    {
                        <li id="PasswordRequireLowerCase">@RequireLowercaseMessage</li>
                    }
                    @if (!string.IsNullOrEmpty(RequireUppercaseMessage))
                    {
                        <li id="PasswordRequireUpperCase">@RequireUppercaseMessage</li>
                    }

                </ul>
            </div>

            @using (Html.BeginForm("Manage", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "frmChangePassword", @autocomplete = "off" }))
            {
                @Html.AntiForgeryToken();
                @Html.ValidationSummary();
                Html.EnableClientValidation();
                <div class="col-md-12 col-sm-12 col-xs-12">

                    @if (ViewBag.token == null)
                    {

                        <div class="form-group" style="margin-bottom:15px !important">
                            @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-4 control-label", @style = "margin-top:6px; bold !important;" })
                            <div class="col-md-5">
                                @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control iboxtextbox", @required = "required" })
                            </div>
                        </div>
                    }
                    else
                    {
                        @Html.Hidden("OldPassword", "OldPassword")
                        @Html.HiddenFor(m => m.token, new { @Value = ViewBag.token })
                        @Html.HiddenFor(m => m.provider, new { @Value = ViewBag.provider })
                    }
                    <div class="form-group" style="margin-bottom:15px !important">
                        @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-4 control-label", @style = "margin-top:6px; bold !important;" })
                        <div class="col-md-5">
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control iboxtextbox", @required = "required" })
                        </div>
                    </div>
                    <div class="form-group" style="margin-bottom:15px !important">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label", @style = "margin-top:6px; bold !important;" })
                        <div class="col-md-5">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control iboxtextbox", @required = "required" })
                        </div>
                    </div>


                    <!--Islahuddin-->
                    <input type="submit" id="btnchangepassword" value="Change password" class="btn btn-primary" onclick="changepassword(this);" />
                    @*<a href="/Home/Index" class="btn btn-default btn-sm">Home</a>*@
                    @if (ViewBag.token == null)
                    {
                        @Html.ActionLink("Home", "Index", "Home", null, new { @class = "btn btn-default btn-sm" })
                    }
                </div>


            }

        </div>

    </div>
</div>
@*<script src="@Url.Content("~/bundles/jqueryval")" type="text/javascript"></script>
    <script src="@Url.Content("~/bundles/common3")" type="text/javascript"></script>*@
<script>
    //$("input[type='button']").click(function (event) {
    //$('#changepasword').click(function () {
    //$('#changepassword').bind('click', function () {
    //    $('#textToReset').text('');
    //    return false;
    //})
    $(document).ready(function () {
        var message = '@changemsg';
        if (message == "OK") {
            $("#lblMsg").text("Your password has been changed successfully.");
            alert('Your password has been changed successfully.');
            window.location.href = '@Url.Action("Login","Account")';
        } else if (message == "OK1") {
            $("#lblMsg").text("Your password has been changed successfully. Please Log in application.");
            alert('Your password has been changed successfully. Please Log in application.');
            window.location.href = '@Url.Action("Login", "Account")';
        }
    });
    function changepassword(e) {
        e.preventDefault();
        $("#lblMsg").text('');
        if (!($('#frmChangePassword').valid())) return;
        $.ajax({
            @*url: '@Url.Action("Manage", "Account")',*@
            type: "POST",
            cache: false,
            data: $('#frmChangePassword').serialize(),
            success: function (result) {
                var message = '@changemsg';
                if (result == "OK") {
                    $("#lblMsg").text("Your password has been changed successfully.");
                    alert('Your password has been changed successfully.');
                    window.location = '/Home';
                }
                else {
                    window.location = '/Account/Manage';
                    $("#lblMsg").text(result.Errors.toString());
                }
            },
            error: function () {
                alert('error');
            }
        });
        //var isValid = $('#frmChangePassword').valid();
        //if (!isValid) {
        //    event.preventDefault();
        //}
        //else {

        //    alert("Password changed successfully !");
        //    //event.preventDefault();
        //}
    }
</script>

<script>
    $(document).ready(function () {

       // debugger;
        $("#NewPassword").keyup(function () {
           // alert($(this).val());
            $(".pwd-restrictions li").css("color", "black");
            $.ajax({
                url: '@Url.Action("CheckPasswordStrength", "Account")',
                type: "GET",
                //cache: false,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                data: { strPassword: $("#NewPassword").val() },

                complete: function (data) {
                   // debugger
                },
                success: function (data) {
                    //alert("success");
                    console.log(data);

                    var result = data.Data;
                    var htmlStr = '';
                    for (var index = 0; index < result.length; index++) {

                        $("#" + result[index].Key).text(result[index].Value);
                        $("#" + result[index].Key).css("color", "red");


                    }


                },

                error: function (jqXHR, textStatus, errorThrown) {
                   // debugger;
                    //alert("jqXHR.status:" + jqXHR.status);
                    //alert("jqXHR.ResponseText:" + jqXHR.responseText);
                    //alert("jqXHR.statusText:" + jqXHR.statusText);

                }
            });
        });

    });
</script>