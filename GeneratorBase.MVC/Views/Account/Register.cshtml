@model GeneratorBase.MVC.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = null;
    var commonObj = GeneratorBase.MVC.Models.CommonFunction.Instance;
    bool AlwaysUseEmailAsUsername = commonObj.AlwaysUseEmailAsUsername();
    bool IsVerifyUserEmail = !string.IsNullOrEmpty(System.Configuration.ConfigurationManager.AppSettings["VerifyUserEmail"]);
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Register</title>

    <style>
        .colorgraph {
            height: 5px;
            border-top: 0;
            background: #c4e17f;
            border-radius: 5px;
            background-color: #428BCA;
        }

        #DuplicacyMsg {
            font-size: 12pt !important;
        }

        #successMsg {
            font-size: 16pt;
            text-align: center;
            color: black !important;
        }
    </style>

</head>
<body>

    <script src="@Url.Content("~/Scripts/jquery-3.6.0.min.js")" type="text/javascript"></script>
    <script src="~/Scripts/jquery-3.6.0.min.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>

    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/Common3/jquery.maskedinput.js" type="text/javascript"></script>
    <script type='text/javascript'>$(document).ready(function () { $('#PhoneNumber').mask('999-999-9999'); });</script>
    <script>
        function onRefreshChange(e) {
            $("#captchaimage").attr("src", $("#captchaimage").attr("src") + "?timestamp=" + new Date().getTime());
        }

    </script>
    <div class="CreateAccount_Wrapper">

        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data", @autocomplete = "off" }))
        {

            @Html.AntiForgeryToken();
            Html.ValidationSummary(true);
            Html.EnableClientValidation();

            <p class="text-danger" id="DuplicacyMsg"></p>
            <p class="text-success" id="successMsg"></p>
            <div id="mainDiv" style="margin-top:5px;">
                <div id="divCheckPasswordMessage" class="alert alert-secondary font-weight-bold m-0 mb-2 p-2">
                    Passwords must have at least 8 characters and contain at least one of each: number, uppercase letter, lowercase letter, symbol (like #, %, &)
                </div>
                <h5>Account Information</h5>
                @if (AlwaysUseEmailAsUsername)
                {
                    <div class="form-group" style="display:none;" id="dvUserName">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control input-lg", @placeholder = "User Name *" })
                        @Html.ValidationMessageFor(model => model.UserName, null, new { @Style = "font-size:8pt;vertical-align: text-top;" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Email, new { onblur = "$('#UserName',$('#dvUserName')).val($(this).val());", @class = "form-control input-lg", @placeholder = "Email Address (UserName)*" })
                        @Html.ValidationMessageFor(model => model.Email, null, new { @Style = "font-size:8pt;vertical-align: text-top;" })
                    </div>
                }
                else
                {
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control input-lg", @placeholder = "User Name *" })
                        @Html.ValidationMessageFor(model => model.UserName, null, new { @Style = "font-size:8pt;vertical-align: text-top;" })
                    </div>
                }
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-6">
                        <div class="form-group">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control input-lg", @placeholder = "Password *" })
                            @Html.ValidationMessageFor(model => model.Password, null, new { @Style = "font-size:8pt;vertical-align: text-top;" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-6">
                        <div class="form-group">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control input-lg", @placeholder = "Confirm Password *" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @Style = "font-size:8pt;vertical-align: text-top;" })
                        </div>
                    </div>
                </div>
                <h5>Personal Information</h5>
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-6">
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control input-lg", placeholder = "First Name *" })
                            @Html.ValidationMessageFor(model => model.FirstName, null, new { @Style = "font-size:8pt;vertical-align: text-top;" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-6">
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control input-lg", placeholder = "Last Name *" })
                            @Html.ValidationMessageFor(model => model.LastName, null, new { @Style = "font-size:8pt;vertical-align: text-top;" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-12">
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control input-lg", placeholder = "Phone Number *" })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, null, new { @Style = "font-size:8pt;vertical-align: text-top;" })
                        </div>
                    </div>
                </div>
                @if (!AlwaysUseEmailAsUsername)
                {
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control input-lg", @placeholder = "Email Address *" })
                        @Html.ValidationMessageFor(model => model.Email, null, new { @Style = "font-size:8pt;vertical-align: text-top;" })
                    </div>
                }
                @Html.Partial("~/Views/Account/ApplicationUserExtra.cshtml", Model, new ViewDataDictionary { { "view", "Register" } })
                <label>
                    Captcha letters are case sensitive
                </label>
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-6">
                        @Html.TextBox("CaptchaText", null, new { @class = "form-control input-lg", @placeholder = "Captcha *" })
                        <span class="field- validation-error" data-valmsg-for="captchaID" data-valmsg-replace="true">
                            <span for="captchaID" id="CaptchaverificationMsg" style="color: red; font-size: 8pt; vertical-align: text-top;"></span>
                        </span>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-6">
                        <div class="form-group">
                            <img id="captchaimage" src="@Url.Action("generateCaptcha", "Account")" />
                            <a id="refresh" onclick="onRefreshChange(event);">
                                &nbsp;<i class="fa fa-refresh"></i>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12">
                        By clicking <strong class="label label-primary">Create My Account</strong>, you
                        agree to the <a href="#" data-toggle="modal" data-target="#t_and_c_m">Terms and Conditions</a> set out by this
                        site, including our Cookie Use.
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-xs-12 col-md-6">
                        <input type="submit" value="Create My Account" onclick="QuickCreateAccount(event, 'DuplicacyMsg', 'successMsg', 'CaptchaverificationMsg', '');" class="btn btn btn-primary btn-block" style="padding:4px; font-size:18px">
                    </div>
                    <div class="col-xs-12 col-md-6">
                        <button type="button" class="btn btn-default btn-block" data-dismiss="modal" aria-hidden="true" style="padding:4px; font-size:18px">Cancel</button>
                    </div>
                </div>
            </div>

        }
    </div>
    @{ string twofactorauthenticationenable = commonObj.TwoFactorAuthenticationEnabled(); }
    <script>
    function QuickCreateAccount(e) {
        e.preventDefault();
        var form = $(e.currentTarget).closest('form');
        if (!form.valid()) return;
        var url = $(e.currentTarget).closest('form').attr("action");
        var formData = $(e.currentTarget).closest('form').serialize();
        $.ajax({
            url: url,
            type: "POST",
            async: false,
            data: formData,
            dataType: "json",
            success: function (jsonresult) {
                result = jsonresult.result;
                if (result == "Ok") {
                    var buttontext = "";
                    if ('@IsVerifyUserEmail' == 'True' || "@twofactorauthenticationenable.ToLower()" == "true") {
                            var verifyurl = '@Url.Action("EmailCodeNotVerified", new { UserId = "_UserId", code = "", mode = "1" })'.replace('_UserId', jsonresult.userid);
                        $("#popupCreateanaccountLabel").html("Email Verification");
                        $("#dvCreateanaccount").html("Loading...");
                        $("#dvCreateanaccount").load(verifyurl);
                        $("#accordionSidebar").hide();
                        form.find("#mainDiv").hide();
                        return true;
                    }
                    else {
                        buttontext = "<br><a data-dismiss='modal' aria-hidden='true' class='btn btn-primary' style='margin-top:20px;margin-bottom:30px; font-weight:normal; font-size:14pt'>Login</a>";
                    }

                    form.find('#DuplicacyMsg').text('');
                    if ("@twofactorauthenticationenable.ToLower()" == "true") {
                        form.find('#successMsg').text("Email sent, Please verify registered email to activate your account.");
                        form.find('#successMsg').prepend("<center style='margin-bottom:10px; font-size:45px' class='text-success'><i class='fa fa-check-circle'></i></center>");
                    }
                    else if (result.includes("SMTP Issue")) {
                        form.find('#DuplicacyMsg').text(result + ': SMTP Setting is not correct.');
                        form.find('#DuplicacyMsg').text(result);
                    }
                    else {
                        form.find('#successMsg').text("Congratulations! You have successfully registered.");
                        form.find('#successMsg').append(buttontext);
                        form.find('#successMsg').prepend("<center style='margin-bottom:10px; font-size:45px' class='text-success'><i class='fa fa-check-circle'></i></center>");

                    }
                    form.find("#mainDiv").hide();
                }
                else if (result == "emailExist") {
                    form.find('#DuplicacyMsg').text('');
                    form.find('#DuplicacyMsg').text("E-Mail already exist. Please try another one.");
                }
                else if (result == "Captchaverification") {
                    form.find('#CaptchaverificationMsg').text('');
                    form.find('#CaptchaverificationMsg').text("Captcha verification failed!");
                }
                else if (result == "UserExist") {
                    form.find('#DuplicacyMsg').text("Username already exist. Please try another one.");
                }
                else {
                    form.find('#DuplicacyMsg').text('');
                    form.find('#DuplicacyMsg').text(result);
                }
                if (result != "Captchaverification") {
                    form.find('#CaptchaverificationMsg').text('');
                }
            }
        });
        }

    </script>

    <script>
    $(document).ready(function () {

        debugger;
        $("#mainDiv").find("#Password").keyup(function () {
           // alert($(this).val());
           // $(".pwd-restrictions li").css("color", "black");
            $.ajax({
                url: '@Url.Action("CheckPasswordStrength", "Account")',
                type: "GET",
                //cache: false,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                data: { strPassword: $(this).val() },

                complete: function (data) {
                   // debugger
                },
                success: function (data) {
                   // alert("success");
                    console.log(data);

                    var result = data.Data;
                    var htmlStr = '';
                   // $("#mainDiv div").html('');
                    var list = document.createElement('ul');
                    for (var index = 0; index < result.length; index++) {

                        //$("#" + result[index].Key).text(result[index].Value);
                        //$("#" + result[index].Key).css("color", "red");
                        if (result[index].Value != "OK") {
                            // debugger;

                            //for (var i = 0; i < errors.length; i++) {
                            var item = document.createElement('li');
                            item.appendChild(document.createTextNode(result[index].Value));
                            list.appendChild(item);

                            $("#divCheckPasswordMessage").html(list);
                        }
                        else if (result[index].Value == "OK" || result[index].Value == '') {
                            $("#divCheckPasswordMessage").html('Passwords must have at least 8 characters and contain at least one of each: number, uppercase letter, lowercase letter, symbol(like #, %, &)');
                        }
                    }
                    

                },

                error: function (jqXHR, textStatus, errorThrown) {
                    debugger;
                    //alert("jqXHR.status:" + jqXHR.status);
                    alert("jqXHR.ResponseText:" + jqXHR.responseText);
                    //alert("jqXHR.statusText:" + jqXHR.statusText);

                }
            });
        });

    });
    </script>

</body>
</html>
