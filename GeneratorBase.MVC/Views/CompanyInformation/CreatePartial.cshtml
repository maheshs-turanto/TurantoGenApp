@model GeneratorBase.MVC.Models.CompanyInformation
@{
    ViewBag.Title = "Create CompanyInformation";
    var modelproperties = ModelReflector.Entities.FirstOrDefault(p => p.Name == "CompanyInformation").Properties;
    var NonViewableProperties = User.CanNotView("CompanyInformation");
    var proplstgroupby = modelproperties.Where(p => p.Proptype.ToLower() == "group").GroupBy(p => p.PropText);
    List<string> hiddenProperties = new List<string>();
    string lstHiddenGroupFLS = GeneratorBase.MVC.Models.CustomHelperMethod.HideGroupsForFLSHiddenBR(NonViewableProperties, hiddenProperties, proplstgroupby, "CompanyInformation", User);
    var viewmode = Convert.ToString(ViewData["viewmode"]);
    string wizardid = "";
    string footerclassdiv1 = "card ButtonFooter1";
    string footerclassdiv2 = "card-footer container-fluid";
    if (viewmode == "wizard")
    {
        footerclassdiv1 = footerclassdiv2 = "";
        wizardid = "id=wizard";
    }
    //
    var path = Url.Content("~/logo/");
    var url = path + "logo.gif";
    var url1 = path + "logo_white.png";
    var url2 = path + "Loginbg.jpg";
    var commonObj = GeneratorBase.MVC.Models.CommonFunction.Instance;
    if (HttpContext.Current.Request.Url.Host == "localhost")
    {
        path = Url.Content("~/logo/");
        url = path + "logo.gif";
        url1 = path + "logo_white.png";
        url2 = path + "Loginbg.jpg";
    }
}
@{

    if (ViewBag.IsPartial == true)
    {
        <link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
        <link href="@Url.Content("~/Content/chosen.css")" rel="stylesheet" type="text/css" />
        <script src="@Url.Content("~/bundles/jqueryval")" type="text/javascript"></script>
        <script src="@Url.Content("~/bundles/common3")" type="text/javascript"></script>
        <script type="text/javascript">
            var config = {
                '.chosen-select': {},
                '.chosen-select-deselect': { allow_single_deselect: true },
                '.chosen-select-no-single': { disable_search_threshold: 10 },
                '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
                '.chosen-select-width': { width: "95%" }
            }
            for (var selector in config) {
                $(selector).chosen(config[selector]);
            }
        </script>
    }
}
@if (!string.IsNullOrEmpty(wizardid))
{
    <style>
        .hide {
            display: none !important;
        }

        .show {
            display: block !important;
        }

        .pager li {
            display: inline;
        }

        .pager {
            padding-left: 0;
            margin: 20px 0;
            list-style: none;
            text-align: center;
        }

            .pager li > a, .pager li > span {
                display: inline-block;
                padding: 5px 14px;
                background-color: #fff;
                border: 1px solid #ddd;
                border-radius: 4px !important;
            }

        .next a {
            float: right;
        }

        .previous a {
            float: left;
        }
    </style>
}
@{
    if (!string.IsNullOrEmpty(ViewBag.CompanyInformationIsHiddenRule))
    {
        @Html.Raw(ViewBag.CompanyInformationIsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.CompanyInformationIsGroupsHiddenRule))
    {
        @Html.Raw(ViewBag.CompanyInformationIsGroupsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.CompanyInformationIsSetValueUIRule))
    {
        @Html.Raw(ViewBag.CompanyInformationIsSetValueUIRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.CompanyInformationRestrictDropdownValueRule))
    {
        @Html.Raw(ViewBag.CompanyInformationRestrictDropdownValueRule);
    }
}
@using (Html.BeginForm("Create", "CompanyInformation", new { UrlReferrer = Convert.ToString(ViewData["CompanyInformationParentUrl"]), IsDDAdd = ViewBag.IsDDAdd, viewmode = viewmode }, FormMethod.Post, new { enctype = "multipart/form-data", id = "frmCompanyInformation" }))
{
    @Html.AntiForgeryToken();
                            if (!string.IsNullOrEmpty(wizardid))
                            { @Html.ValidationSummary(false, "", new { @class = "text-danger d-none" }) }
                            else { Html.ValidationSummary(true); }
                            Html.EnableClientValidation();
                            <input type="hidden" id="ErrMsg" />
                            <div id="errorContainer" style="display: none">
                                <div id="errorsMsg"></div>
                                <div id="errors"></div>
                            </div>
                            @Html.Partial("~/Views/Shared/ErrorTemplate.cshtml")
                            <div class="row">
                                @Html.Hidden("AssociatedEntity", Convert.ToString(ViewData["AssociatedType"]))
                                @Html.Hidden("HostingEntityName", Convert.ToString(ViewData["HostingEntityName"]))
                                @Html.Hidden("HostingEntityID", Convert.ToString(ViewData["HostingEntityID"]))
                                <div class="col-md-12 col-sm-12 col-xs-12 @(string.IsNullOrEmpty(wizardid)?"card":"")">
                                    <div class="AppForm" @wizardid>
                                        @if (!string.IsNullOrEmpty(wizardid))
                                        {
                                            <ol id="olwizard" class="bwizard-steps clearfix clickable" role="tablist">
                                                <li role="tab" class="step-number" id="liGroupCompanyInformationCompanyInformation" onclick="bwizard_SaveOnClick(event);">
                                                    <div></div><a class="hidden-phone">Company Information</a>
                                                </li>
                                                <li role="tab" class="step-number" id="liGroupCompanyInformationChangeIcons" onclick="bwizard_SaveOnClick(event);">
                                                    <div></div><a class="hidden-phone">Change Icons</a>
                                                </li>
                                                <li role="tab" class="step-number" id="liGroupCompanyInformationSMTPDetails" onclick="bwizard_SaveOnClick(event);">
                                                    <div></div><a class="hidden-phone">SMTP Details</a>
                                                </li>
                                                <li role="tab" class="step-number" id="liGroupCompanyInformationAbout" onclick="bwizard_SaveOnClick(event);">
                                                    <div></div><a class="hidden-phone">About</a>
                                                </li>
                                            </ol>
                                            <script>
                                                $(document).ready(function(){
                                                    $(".formbuttonfix").hide();
                                                    $(".pager").show();
                                                    $(".pager.bwizard-buttons").show();
                                                    $(".hidetools").hide();
                                                });
                                            </script>
                                            @Html.Hidden("wizardstep")
                                        }
                                    <div class="">
                                        <div class="row bgwizard" id="wzGroupCompanyInformationCompanyInformation">

                                            <div class="col-md-12 col-sm-12 col-xs-12" id="accordion">
                                                <div class="card card-default" id="dvGroupCompanyInformationCompanyInformation">
                                                    <div class="card-header">

                                                        <h3 class="card-title"> <a class="accordion-toggle" data-toggle="collapse" aria-expanded="true" href="#companyinformationbody" alt="Company Information" title="Company Information"><span class="fa fa-chevron-down"></span> Company Information</a></h3>
                                                    </div>
                                                    <div class="card-body row collapse show" id="companyinformationbody" data-parent="#accordion">
                                                        @if (ViewBag.SelectedCompanyList_CompanyInformationCompanyListAssociation != null)
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvCompanyInformation">
                                                                <div class='form-group'>
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">Select Tenant(s)</label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
                                                                        <div class="input-group" style="width:100%;">
                                                                            @Html.DropDownList("SelectedCompanyList_CompanyInformationCompanyListAssociation", null, new { @multiple = "multiple" })
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <script>
                                                                $(document).ready(function () {
                                                                    $('select[name=SelectedCompanyList_CompanyInformationCompanyListAssociation]').multiselect({
                                                                        buttonWidth: '100%'
                                                                    });
                                                                });
                                                            </script>
                                                        }

                                                        @if (User.CanView("CompanyInformation", "CompanyName"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvCompanyName">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.CompanyName)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.CompanyName) <span class="text-danger-reg">*</span></label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.CompanyName)
                                                            </div>
                                                        }

                                                        @if (User.CanView("CompanyInformation", "CompanyEmail"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvCompanyEmail">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.CompanyEmail)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.CompanyEmail) <span class="text-danger-reg">*</span></label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.CompanyEmail, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.CompanyEmail)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "CompanyAddress"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvCompanyAddress">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.CompanyAddress)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.CompanyAddress) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
                                                                        @Html.TextAreaFor(model => model.CompanyAddress, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.CompanyAddress)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "CompanyCountry"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvCompanyCountry">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.CompanyCountry)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.CompanyCountry) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.CompanyCountry, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.CompanyCountry)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "CompanyState"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvCompanyState">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.CompanyState)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.CompanyState) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.CompanyState, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.CompanyState)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "CompanyCity"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvCompanyCity">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.CompanyCity)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.CompanyCity) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.CompanyCity, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.CompanyCity)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "CompanyZipCode"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvCompanyZipCode">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.CompanyZipCode)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.CompanyZipCode) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.CompanyZipCode, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.CompanyZipCode)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "ContactNumber1"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvContactNumber1">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.ContactNumber1)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.ContactNumber1) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.ContactNumber1, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.ContactNumber1)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "ContactNumber2"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvContactNumber2">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.ContactNumber2)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.ContactNumber2) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.ContactNumber2, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.ContactNumber2)
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row bgwizard" id="wzGroupCompanyInformationChangeIcons">

                                            <div class="col-md-12 col-sm-12 col-xs-12" id="accordion">
                                                <div class="card card-default" id="dvGroupCompanyInformationChangeIcons">
                                                    <div class="card-header">

                                                        <h3 class="card-title"> <a class="accordion-toggle" data-toggle="collapse" aria-expanded="true" href="#changeiconsbody" alt="Change Icons" title="Change Icons"><span class="fa fa-chevron-down"></span> Change Icons</a></h3>
                                                    </div>
                                                    <div class="card-body row collapse collapse" id="changeiconsbody" data-parent="#accordion">
                                                        @if (User.CanAdd("Document"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvLoginBg">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.LoginBg)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.LoginBg) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
                                                                        <div style="position:relative;">
                                                                            <a class='btn btn-primary btnupload' href='javascript:;'>
                                                                                Upload Image
                                                                                <input id="LoginBg" accept='image/*' type="file" style='position:absolute;z-index:2;top:0;left:0;filter: alpha(opacity=0);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";opacity:0;background-color:transparent;color:transparent;width:105px;' name="LoginBg" onchange='$("#upload-file-infoLoginBg").html($(this).val());'>
                                                                            </a>
                                                                            &nbsp;
                                                                            <span class='label uploadlblFix' id="upload-file-infoLoginBg"></span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }

                                                        @if (User.CanAdd("Document"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvLogo">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.Logo)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.Logo) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
                                                                        <div style="position:relative;">
                                                                            <a class='btn btn-primary btnupload' href='javascript:;'>
                                                                                Upload Image
                                                                                <input id="Logo" accept='image/*' type="file" style='position:absolute;z-index:2;top:0;left:0;filter: alpha(opacity=0);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";opacity:0;background-color:transparent;color:transparent;width:105px;' name="Logo" onchange='$("#upload-file-infoLogo").html($(this).val());'>
                                                                            </a>
                                                                            &nbsp;
                                                                            <span class='label uploadlblFix' id="upload-file-infoLogo"></span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "LongWidth"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvLongWidth">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.LogoHeight)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.LogoHeight) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.LogoHeight, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.LogoHeight)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "LongHeight"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvLongHeight">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.LogoHeight)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.LogoHeight) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.LogoHeight, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.LogoHeight)
                                                            </div>
                                                        }
                                                        @if (User.CanAdd("Document"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvIcon">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.Icon)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.Icon) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
                                                                        <div style="position:relative;">
                                                                            <a class='btn btn-primary btnupload' href='javascript:;'>
                                                                                Upload Image
                                                                                <input id="Icon" accept='image/*' type="file" style='position:absolute;z-index:2;top:0;left:0;filter: alpha(opacity=0);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";opacity:0;background-color:transparent;color:transparent;width:105px;' name="Icon" onchange='$("#upload-file-infoIcon").html($(this).val());'>
                                                                            </a>
                                                                            &nbsp;
                                                                            <span class='label uploadlblFix' id="upload-file-infoIcon"></span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "IconWidth"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvIconWidth">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.IconWidth)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.IconWidth) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.IconWidth, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.IconWidth)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "IconHeight"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvIconHeight">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.IconHeight)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.IconHeight) </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.IconHeight, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.IconHeight)
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row bgwizard" id="wzGroupCompanyInformationSMTPDetails">

                                            <div class="col-md-12 col-sm-12 col-xs-12" id="accordion">
                                                <div class="card card-default" id="dvGroupCompanyInformationSMTPDetails">
                                                    <div class="card-header">

                                                        <h3 class="card-title"> <a class="accordion-toggle" data-toggle="collapse" aria-expanded="true" href="#smtpdetailsbody" alt="SMTP Details" title="SMTP Details"><span class="fa fa-chevron-down"></span> SMTP Details</a></h3>
                                                    </div>
                                                    <div class="card-body row collapse collapse" id="smtpdetailsbody" data-parent="#accordion">
                                                        @if (User.CanView("CompanyInformation", "SMTPUser"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvSMTPUser">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.SMTPUser)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.SMTPUser) <span class="text-danger-reg">*</span></label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.SMTPUser, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.SMTPUser)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "SMTPServer"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvSMTPServer">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.SMTPServer)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.SMTPServer) <span class="text-danger-reg">*</span></label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.SMTPServer, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.SMTPServer)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "SMTPPassword"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvSMTPPassword">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.SMTPPassword)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.SMTPPassword) <span class="text-danger-reg">*</span></label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.SMTPPassword, new { @class = "form-control", @type = "password" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.SMTPPassword)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "SMTPPort"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvSMTPPort">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.SMTPPort)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.SMTPPort) <span class="text-danger-reg">*</span></label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.SMTPPort, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.SMTPPort)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "SSL"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvSSL">
                                                                <div class="form-group" title="@Html.DisplayNameFor(model => model.SSL)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">
                                                                        @Html.LabelFor(model => model.SSL)
                                                                    </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
                                                                        @Html.CheckBox("SSL", false)

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.SSL)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "UseAnonymous"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvUseAnonymous">
                                                                <div class="form-group" title="@Html.DisplayNameFor(model => model.UseAnonymous)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">
                                                                        @Html.LabelFor(model => model.UseAnonymous)
                                                                    </label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">
                                                                        @Html.CheckBox("UseAnonymous", false)

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.UseAnonymous)
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row bgwizard" id="wzGroupCompanyInformationAbout">
                                            <div class="col-md-12 col-sm-12 col-xs-12" id="accordion">
                                                <div class="card card-default" id="dvGroupCompanyInformationAbout">
                                                    <div class="card-header">

                                                        <h3 class="card-title"> <a class="accordion-toggle" data-toggle="collapse" aria-expanded="true" href="#aboutbody" alt="About" title="About"><span class="fa fa-chevron-down"></span> About</a></h3>
                                                    </div>
                                                    <div class="card-body row collapse collapse" id="aboutbody" data-parent="#accordion">
                                                        @if (User.CanView("CompanyInformation", "AboutCompany"))
                                                        {
                                                            <div class='col-sm-12 col-md-12 col-xs-12' id="dvAboutCompany">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.AboutCompany)">
                                                                    <div>
                                                                        @Html.TextAreaFor(model => model.AboutCompany, new { @class = "form-control", @Value = "" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.AboutCompany)
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row bgwizard" id="wzGroupCompanyInformationDisclaimer">
                                            <div class="col-md-12 col-sm-12 col-xs-12" id="accordion">
                                                <div class="card card-default" id="dvGroupCompanyInformationDisclaimer">
                                                    <div class="card-header">

                                                        <h3 class="card-title"> <a class="accordion-toggle" data-toggle="collapse" aria-expanded="true" href="#disclaimerbody" alt="Disclaimer" title="Disclaimer"><span class="fa fa-chevron-down"></span> Disclaimer</a></h3>
                                                    </div>
                                                    <div class="card-body row collapse collapse" id="disclaimerbody" data-parent="#accordion">
                                                        @if (User.CanView("CompanyInformation", "Disclaimer"))
                                                        {
                                                            <div class='col-sm-12 col-md-12 col-xs-12' id="dvDisclaimer">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.Disclaimer)">
                                                                    <div>
                                                                        @Html.TextAreaFor(model => model.Disclaimer, new { @class = "form-control", @Value = "" })
                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Disclaimer)
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row bgwizard" id="wzGroupCompanyInformationOneDriveDetails">

                                            <div class="col-md-12 col-sm-12 col-xs-12" id="accordion">
                                                <div class="card card-default" id="dvGroupCompanyInformationOneDriveDetails">
                                                    <div class="card-header">

                                                        <h3 class="card-title"> <a class="accordion-toggle" data-toggle="collapse" aria-expanded="true" href="#onedrivedetailsbody" alt="OneDrive Details" title="OneDrive Details"><span class="fa fa-chevron-down"></span> OneDrive Details</a></h3>
                                                    </div>
                                                    <div class="card-body row collapse collapse" id="onedrivedetailsbody" data-parent="#accordion">
                                                        @if (User.CanView("CompanyInformation", "OneDriveClientId"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvOneDriveClientId">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.OneDriveClientId)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.OneDriveClientId)</label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.OneDriveClientId, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.OneDriveClientId)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "OneDriveTenantId"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvOneDriveTenantId">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.OneDriveTenantId)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.OneDriveTenantId)</label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.OneDriveTenantId, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.OneDriveTenantId)
                                                            </div>
                                                        }

                                                        @if (User.CanView("CompanyInformation", "OneDriveUserName"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvOneDriveUserName">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.OneDriveUserName)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.OneDriveUserName)</label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.OneDriveUserName, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.OneDriveUserName)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "OneDrivePassword"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvOneDrivePassword">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.OneDrivePassword)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.OneDrivePassword)</label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.OneDrivePassword, new { @class = "form-control", @type = "password" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.OneDrivePassword)
                                                            </div>
                                                        }
                                                        @if (User.CanView("CompanyInformation", "OneDriveSecret"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvOneDriveSecret">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.OneDriveSecret)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.OneDriveSecret)</label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.OneDriveSecret, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.OneDriveSecret)
                                                            </div>
                                                        }

                                                        @if (User.CanView("CompanyInformation", "OneDriveFolderName"))
                                                        {
                                                            <div class='col-sm-6 col-md-6 col-xs-12' id="dvOneDriveFolderName">
                                                                <div class='form-group' title="@Html.DisplayNameFor(model => model.OneDriveFolderName)">
                                                                    <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.OneDriveFolderName)</label>
                                                                    <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                                                        @Html.TextBoxFor(model => model.OneDriveFolderName, new { @class = "form-control" })

                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.OneDriveFolderName)
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    </div>
                                </div>
                            </div>
                            <div id="divDisplayThresholdLimit1">
                            </div>
                            <div id="divDisplayBRmsgMandatory1">
                            </div>
                            <div id="divDisplayBRmsgBeforeSaveProp1">
                            </div>
                            <div id="divDisplayCodeFragment1">
                            </div>
                            <div class="@footerclassdiv1">
                                <div class="@footerclassdiv2">
                                    @if (ViewBag.IsPartial == null)
                                    {
                                        <a id="btnformcancel" class="btn btn-default btn-sm formbuttonfix" onclick="goBack('@Url.Action("Index","CompanyInformation")');" alt="Cancel" title="Cancel">Cancel</a>
                                    }
                                    @if (ViewBag.IsPartial == null)
                                    {
                                        <input type="submit" name="command" value="Create" class="btn btn-primary btn-sm formbuttonfix" alt="Create" title="Create" />
                                    }
                                    @if (ViewBag.IsPartial == null)
                                    {
                                        if (ViewBag.IsDDAdd == null && User.CanEdit("CompanyInformation"))
                                        {
                                            <input id="btnsavereturn" type="submit" name="command" value="Create & Continue" class="btn btn-primary btn-sm formbuttonfix" alt="Create & Continue" title="Create & Continue" />
                                            <input type="submit" name="command" value="Create & Add another" class="btn btn-primary btn-sm formbuttonfix" alt="Create & Add another" title="Create & Add another" />
                                        }
                                    }
                                    <input type="hidden" name="hdncommand" value="" />
                                </div>
                            </div>
                            <br /><br />
                            <div style="display:none;">
                                @if (User.CanView("CompanyInformation", "LoginBackgroundWidth"))
                                {
                                <div class='col-sm-6 col-md-6 col-xs-12' id="dvLoginBackgroundWidth">
                                    <div class='form-group' title="@Html.DisplayNameFor(model => model.LoginBackgroundWidth)">
                                        <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.LoginBackgroundWidth) </label>
                                        <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                            @Html.TextBoxFor(model => model.LoginBackgroundWidth, new { @class = "form-control" })

                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.LoginBackgroundWidth)
                                </div>
                                }
                                @if (User.CanView("CompanyInformation", "LoginBackgroundHeight"))
                                {
                                <div class='col-sm-6 col-md-6 col-xs-12' id="dvLoginBackgroundHeight">
                                    <div class='form-group' title="@Html.DisplayNameFor(model => model.LoginBackgroundHeight)">
                                        <label class="col-sm-5 col-md-5 float-left col-xs-12">@Html.LabelFor(model => model.LoginBackgroundHeight) </label>
                                        <div class="input-group col-sm-7 col-md-7 float-left col-xs-12">

                                            @Html.TextBoxFor(model => model.LoginBackgroundHeight, new { @class = "form-control" })

                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.LoginBackgroundHeight)
                                </div>
                                }
                            </div>
}
<script>
    $(function () {
        ApplyAreYouSure();
    });
</script>
@{
    var businessrule = User.businessrules.Where(p => p.EntityName == "CompanyInformation").ToList();
    if ((businessrule != null && businessrule.Count > 0))
    {
        var typelist = string.Join(",", businessrule.SelectMany(p => p.ActionTypeID).Distinct().ToList());

        <script>
            $(document).ready(function () {
                document.getElementById("ErrMsg").innerHTML = "";
                var flag = true;
                var dataurl = "";
                var form = "";
                var inlinecount = "0";
                form = $("#frmCompanyInformation");
                dataurl = "@Url.Action("businessruletype", "CompanyInformation", new { ruleType = "OnCreate"})";
                ApplyBusinessRuleOnCreate("@typelist",dataurl, "CompanyInformation", false, "ErrMsg", form);

            });
        </script>


        <script>
            $("form").submit(function (event) {
                //if (!$("#frmCompanyInformation").valid()) return;
                var flag = true;
                document.getElementById("ErrMsg").innerHTML = "";
                var dataurl = "";
                var form = "";
                var inlinecount = "0";
                //var form = $(this).serialize();
                form = $("#frmCompanyInformation").serialize();

                dataurl = "@Url.Action("businessruletype", "CompanyInformation", new { ruleType = "OnCreate"})";
                flag = ApplyBusinessRuleOnSubmit(dataurl, "CompanyInformation", false, "ErrMsg", form,"@typelist");
                //business rules on inline associations
                if (flag) {
                    $('input:hidden[name="hdncommand"]').val($(document.activeElement).val());
                    $("#frmCompanyInformation").find(':input').removeAttr('disabled');
                }
                else
                    $("html, body").animate({ scrollTop: 0 }, "fast");
                return flag;
            });
        </script>
    }
    else
    {
        <script>
            $("input[type='submit']").click(function (event) {
                if (!$("#frmCompanyInformation").valid()) return;
                var $this = $(this);
                $('input:hidden[name="hdncommand"]').val($this.val());
            });
        </script>

    }
}
<link href='@Url.Content("~/Scripts/summernote.css")' rel='stylesheet' type='text/css' />
<script src='@Url.Content("~/Scripts/summernote.js")' type='text/javascript'></script>
<script type='text/javascript'>$(document).ready(function () {  $('#Disclaimer').summernote();    });</script>
<script type='text/javascript'>$(document).ready(function () {  $('#AboutCompany').summernote();    });</script>
<script type='text/javascript'>
    $(document).ready(function () {
        try {
            focusOnControl('frmCompanyInformation');
        }
        catch (ex) { }
        ShowHelpIcon(@Html.Raw("'"+Url.Action("ShowHelpIcon", "PropertyHelpPage")+"'"),'CompanyInformation','create',false,'CompanyInformation')
        //instruction feature
        ShowInstructionLabel(@Html.Raw("'"+Url.Action("ShowInstructionLabel", "PropertyHelpPage")+"'"),'CompanyInformation','create',false,'CompanyInformation')
        var arrgroup = '@lstHiddenGroupFLS'.split(',');
        $.each( arrgroup, function( index, value ){
            $("#"+value).hide();
        });
    });
</script>
<script>
    $(document).ready(function () {
        try {
            LockHostDropdownOnCreate('@Convert.ToString(ViewData["AssociatedType"])');
        }
        catch (ex) { }
    });
</script>
<script>

    $('.closeall').click(function () {
        $('#accordion .collapse').attr("data-parent", "#accordion");
        $('#accordion .collapse').collapse('hide');
    });
    $('.openall').click(function () {
        $('#accordion .collapse').removeAttr("data-parent");
        $('#accordion .collapse').collapse('show');
    });

    $(document).ready(function () {
        $('.collapse')
            .on('shown.bs.collapse', function () {
                $(this)
                    .parent()
                    .find(".fa-chevron-down")
                    .removeClass("fa-chevron-down")
                    .addClass("fa-chevron-up");
            })
            .on('hidden.bs.collapse', function () {
                $(this)
                    .parent()
                    .find(".fa-chevron-up")
                    .removeClass("fa-chevron-up")
                    .addClass("fa-chevron-down");
            });
    });
</script>

