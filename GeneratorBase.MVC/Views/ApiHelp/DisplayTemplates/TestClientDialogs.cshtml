@using System.Web.Http
@using GeneratorBase.MVC.Models
@model HelpPageApiModel
@{
    // Layout = "~/Views/Shared/_LayoutWebApi.cshtml";
}
@{
    var description = Model.ApiDescription;
    string applicationPath = Request.ApplicationPath;
    if (!applicationPath.EndsWith("/"))
    {
        applicationPath += "/";
    }
}
@Scripts.Render("~/bundles/WebApi")
<script>
    $(document).ready(function(){
        $("#testClientButton").click();
        $("#btnaddHeader").click();
    })

</script>
<button id="testClientButton" style="display:none;">Test API</button>
<div id="testClientDialog" title="@description.HttpMethod @description.RelativePath">
    <div class="input-group">
        <div class="input-group-prepend pl-0 col-1 " >
            <input class="httpMethod" spellcheck="false" data-bind="value: HttpMethod" />
        </div>
        
        <input class="uriPath col-11" spellcheck="false" data-bind="value: UriPath" />
    </div>
   
    <div data-bind="visible: UriParameters.length > 0">
        <h5 class="ui-widget-header" style=" margin-top: 8px;">URI parameters</h5>
        <div class="panel">
            <div data-bind="foreach: UriParameters">
                <div>
                    <input readonly="true" spellcheck="false" tabindex="100" class="uriParameterLabel" data-bind="value: '{' + name + '}'" />
                    <span>= </span>
                    <input spellcheck="false" data-bind="value: value, valueUpdate: 'afterkeydown', enable: enabled" class="uriParameterInput"/>
                    <input type="checkbox" data-bind="checked: enabled" />
                </div>
            </div>
        </div>
    </div>
    <h5 class="ui-widget-header" style=" margin-top: 8px;">
        Headers <a class="btn btn-primary btn-xs" token="@ViewData["Token"]" id="btnaddHeader" style="text-decoration:none; margin-top:-2px; float:right" href="#" data-bind="click: addHeader"><i class="fa fa-plus-circle"></i> Add header</a>
    </h5>

    <div class="panel">
        <div id="dvheader" data-bind="foreach: RequestHeaders">
            <div>
                <input class="name tokenName" spellcheck="false" data-bind='value: name, uniqueName: true'  />
                <span>: </span>
                <input class="value tokenValue" spellcheck="false" data-bind='value: value, uniqueName: true' />
                <a href='#' data-bind='click: $root.removeHeader' title="Remove Header"><i class="fa fa-times-circle" style="color:red;" ></i></a>
            </div>
        </div>
    </div>
    <h5 class="ui-widget-header">
        <input type='checkbox' data-bind='checked: ShouldShowBody' /> Body
    </h5>
    <div data-bind="visible: ShouldShowBody">
        <div data-bind="visible: SampleTypes.length > 0">
            <span>Samples: </span>
            <select data-bind="options: SampleTypes, value: RequestMediaType"></select>
        </div>
        <pre><textarea class="sampleArea" spellcheck="false" data-bind="value: RequestBody, valueUpdate: 'afterkeydown'" rows="7"></textarea></pre>
    </div>
</div>

<div id="testClientResponseDialog" title="Response for @description.HttpMethod @description.RelativePath" data-bind="with: response">
    <div class="responseStatusDiv">
        <h5 class="ui-widget-header" style="margin-bottom:3px;">Status</h5>
        <span data-bind="text: status"></span>
    </div>
    <div class="responseHeaderDiv">
        <h5 class="ui-widget-header" style="margin-top:8px;">Headers</h5>
        <textarea spellcheck="false" data-bind="value: headers" class="sampleArea" readonly='readonly' rows="6"></textarea>
    </div>
    <div class="responseBodyDiv">
        <h5 class="ui-widget-header">Body</h5>
        <textarea spellcheck="false" data-bind="value: content" class="sampleArea" readonly='readonly' rows="10"></textarea>
    </div>
</div>

<script>
    testClientModel = {
        HttpMethod: '@Model.ApiDescription.HttpMethod',
        UriPathTemplate: @Html.Raw(Json.Encode(Model.ApiDescription.RelativePath)),
        UriParameters: [
                @foreach (var parameter in Model.ApiDescription.ParameterDescriptions)
            {
              if (parameter.Source == System.Web.Http.Description.ApiParameterSource.FromUri)
              {
                  if (parameter.Name.Contains("version"))
                  {
                    @:{ name: "@parameter.Name", value: "@Model.Version"},
                        }
                        else
                  {
                      @:{ name: "@parameter.Name", value: ""},
                  }
                }
            }
        ],
        Samples: {
            @Html.Raw(@String.Join(",", Model.SampleRequests.Select(s => String.Format("\"{0}\": \"{1}\"", s.Key, HttpUtility.UrlEncode(s.Value.ToString()))).ToArray()))
        },
        BaseAddress: '@applicationPath'
    };
</script>