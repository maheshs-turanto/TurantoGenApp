@model CommonFunction
@{
	GeneratorBase.MVC.Models.FavoriteItem FavObj = null;
    using (var favdb = (new ApplicationContext(new GeneratorBase.MVC.Models.SystemUser())))
    {
        FavObj = favdb.FavoriteItems.Where(p => p.LastUpdatedByUser == User.Name && HttpContext.Current.Request.Url.PathAndQuery.EndsWith(p.LinkAddress)).FirstOrDefault();
    }
	var entityModel = GeneratorBase.MVC.ModelReflector.Entities;
  
	var currentController = ViewContext.RouteData.Values["controller"].ToString();
    var commonObj = Model;
    var AppName = commonObj.AppName();
    var CompanyProfile = commonObj.getCompanyProfile(User);
    var timeoutAlert = commonObj.ApplicationSessionTimeOutAlert();
    var onloadEvent = timeoutAlert == "true" ? "onload=initSession()".ToString() : "";
		string AppUrl = System.Configuration.ConfigurationManager.AppSettings["AppUrl"];	
   var url = Url.Content("~/logo/" + CompanyProfile.Icon);
    if (HttpContext.Current.Request.Url.Host == "localhost")
    { url = Url.Content("~/logo/" + CompanyProfile.Icon); }

    var AppIcon = url;
    if (!CompanyProfile.Icon.Contains("logo"))
    {
        if (User.CanView("Document"))
        {
            AppIcon = Url.Action("DisplayImageMobile", "Document", new { id = Convert.ToInt64(CompanyProfile.Icon) }) + "?637932252149701875";
        }
        else
        {
            AppIcon = Url.Content("~/logo/logo.gif");
        }
    }
    var AppIconWidth = CompanyProfile.IconWidth == null ? "28px" : CompanyProfile.IconWidth;
    var AppIconHeight = CompanyProfile.IconHeight == null ? "28px" : CompanyProfile.IconHeight;
	var maintenancemode = commonObj.MaintenanceMode().ToLower() == "true" ? true : false;
	//Email feature changes - 
	var baseUriEmail = commonObj.getBaseUri() + "T_Email/IndexEmail?OnlyNew=True&EntityType=";
    ApplicationUser userinfo = null;
    var picId ="";
    bool IsFile = false;
    bool menudisplay = commonObj.ShowMenuOnTop();
    var userSideBar = (new ApplicationContext(new SystemUser())).T_MenuBars.GetFromCache<IQueryable<T_MenuBar>, T_MenuBar>().ToList().Where(p => (User.IsInRole(p.T_Roles.Split(',').ToArray()) == true || p.T_Roles == "All") && p.T_Disabled.HasValue && !(p.T_Disabled.Value));
    using (var userdb = new ApplicationDbContext(true))
    {
        userinfo = userdb.Users.FirstOrDefault(p => p.UserName == User.Name);
        var ent = entityModel.FirstOrDefault(p => p.Name == "ApplicationUser");
        var properties = ent.Properties;
         var ImgProps = ent.Properties.Where(p => p.PropCheck=="File" || p.PropCheck=="Image").FirstOrDefault();
        if (ImgProps != null)
        {

            var picIdVal = (userinfo.GetType()).GetProperty(ImgProps.Name).GetValue(userinfo, null);
            if (picIdVal != null)
            {
                if (ImgProps.PropCheck == "File")
                {
                    IsFile = true;
                    picId = Convert.ToString(picIdVal);
                }
                if (ImgProps.PropCheck == "Image")
                {
                    picId = Convert.ToString(picIdVal);
                }
            }
        }
    }
   var ProfilePic = Url.Content("~/Content/images/user.png");
    long deflong = 0;
    if (!string.IsNullOrEmpty(picId) && long.TryParse(picId, out deflong))
    {
        if (picId == "0")
        {
            ProfilePic = Url.Content("~/Content/images/user.png");
        }
        else
        {
            if (IsFile)
            {
                ProfilePic = Url.Content("~/Files/") + picId;
            }
            else
            {
                ProfilePic = Url.Action("DisplayProfileImage", "Document", new { id = Convert.ToInt64(picId), time = "637932252149701875" });
            }
        }
    }
} 

<style type="text/css">
    @@media (min-width: 992px) {
        .TopNav .dropdown-menu .dropdown-toggle:after {
            border-top: .3em solid transparent;
            border-right: 0;
            border-bottom: .3em solid transparent;
            border-left: .3em solid;
        }

        .TopNav .dropdown-menu .dropdown-menu {
            margin-left: 0;
            margin-right: 0;
        }

        .TopNav .dropdown-menu li {
            position: relative;
        }

        .TopNav .nav-item .submenu {
            display: none;
            position: absolute;
            left: 100%;
            top: 2px;
        }

        .TopNav .nav-item .submenu-left {
            right: 100%;
            left: auto;
        }

        .TopNav .dropdown-menu > li:hover {
            background-color: black;
        }

        .dropdown-menu > li:hover > .submenu {
            display: block;
        }
    }

    @@media (max-width: 992px) {
        .TopNav {
            padding: 0px !important;
        }

            .TopNav .navbar-nav {
                padding: 5px !important;
            }
    }

    .TopNav .dropdown:hover > .dropdown-menu {
        display: block !important;
        background: #f98401;
        padding: 0px 0px 0px 0px;
        min-width: 200px;
        border: 1px solid #f8f9fc !important;
    }

    .TopNav .dropdown-item:focus, .dropdown-item:hover {
        color: #020202 !important;
        text-decoration: none;
        background-color: #f8f9fc;
    }

    .TopNav .dropdown-item.active, .dropdown-item:active {
        color: #000;
        text-decoration: none;
        background-color: #fff;
    }

    .TopNav .dropdown-item li {
        padding: 5px;
        margin: 0px;
    }

    .TopNav .dropdown-toggle::after {
        vertical-align: 0.1em;
    }

    .TopNav {
        background: #62a8d1 !important;
        padding: 5px;
    }

        .TopNav .dropdown-item {
            color: #fff;
        }

    .TopBarHambugerFix {display:none!important;}
    #user-block-toggle {
        display: none !important;
    }
</style>
<header class="topnavbar-wrapper">
  <nav class="navbar topnavbar">
  <div class="navbar-header">
            <a class="navbar-brand" href="@Url.Action("Index", "Home" )">
                <div class="brand-logo"><img class="img-fluid" src="@AppIcon" alt="App Logo" style="width:@AppIconWidth; height:@AppIconHeight;"></div>
                <div class="brand-logo-collapsed"><img class="img-fluid" src="@AppIcon" alt="App Logo"></div>
            </a>
        </div>
        <div class="navbar-header" id="syncDataMessage" style="display:none;color: #858796;margin-left: 37%;">
            <i class="fa fa-warning"></i> <label class="font-bold warning" style="font-size: 17px; margin-bottom: 0;text-decoration: none">Sync Running</label>
        </div>
         <ul class="navbar-nav mr-auto flex-row">
            <li class="nav-item">
                <!-- Button used to collapse the left sidebar. Only visible on tablet and desktops-->
            <a class="nav-link d-none d-md-block d-lg-block d-xl-block TopBarHambugerFix" href="#" data-trigger-resize="" data-toggle-state="aside-collapsed">
                <em class="fas fa-bars"></em></a><!-- Button to show/hide the sidebar on mobile. Visible on mobile only.-->
            <a class="nav-link sidebar-toggle d-md-none" href="#" data-toggle-state="aside-toggled" data-no-persist="true">
                <em class="fas fa-bars"></em>
            </a>
            </li><!-- START User avatar toggle-->
            <li class="nav-item d-none d-md-block">
                <!-- Button used to collapse the left sidebar. Only visible on tablet and desktops--><a class="nav-link" id="user-block-toggle" href="#user-block" data-toggle="collapse"><em class="fa fa-user"></em></a>
            </li><!-- END User avatar toggle-->
            <!-- START lock screen-->
            <li class="nav-item d-none d-flex">
			<a class="mr-1 nav-link" href="@Url.Action("Index", "Home")"><i class="fa fa-home" aria-hidden="true" style="vertical-align: middle;"></i></a>
			<h4 style="font-size: 20px;margin-top: 14px;color: #fff;"><a href="@Url.Action("Index", "Home")" style="color:#858796; text-decoration:none">@AppName</a></h4>
			</li><!-- END lock screen-->
        </ul>          
                   <ul class="navbar-nav flex-row">
						                        @if (entityModel.Where(p => p.Name == Request.RequestContext.RouteData.Values["controller"].ToString() && !p.IsAdminEntity && (!p.IsDefault || p.Name == "T_Schedule")).Count() > 0)
                        {
                            <li id="liFavorite" class="nav-item dropdown dropdown-list">
                    @{
                string starcolor = FavObj == null ? " color:;" : "color: #F90;";
                string favoriteId = FavObj == null ? "" : FavObj.Id.ToString();
                string favoriteName = FavObj == null ? "" : FavObj.Name;
                    }
                    <a class="nav-link dropdown-toggle-nocaret" href="#" data-toggle="dropdown" title="Favorite">
                        <em class="fa fa-star" style="@starcolor"></em>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right animated zoomIn favorite-box">
                        <div class="dropdown-item">
                            <form method="post" accept-charset="UTF-8" style="padding:10px">
                                <h4 style="color:initial;">Add to Favorite</h4>
                                <div class="form-group">
                                    <input class="form-control" type="text" placeholder="Enter Name" id="Favorite" name="Favorite" required value="@favoriteName" />
                                </div>
                                 <a class="btn btn-primary btn-block mt-1" onclick="favorite();" >Save</a>
                                @*<input  type="button" id="save" value="Save" />*@
                                <input type="hidden" id="hdnFavorite" name="hdnFavorite" value="@favoriteId" />
                                <label id="lblFavoriteSuceeess" class="field-validation-error" style="font-weight:normal;"></label>
                            </form>
                        </div>
                    </div>
                </li>
                        }
												@if (User.CanView("PropertyHelpPage") && User.CanView("EntityHelpPage"))
						{
                                var EntNameHelp = currentController;
								var EntityReflectorObjHelp = entityModel.FirstOrDefault(p => p.Name == EntNameHelp);
								var DisplayStringHelp = EntityReflectorObjHelp != null ? EntityReflectorObjHelp.DisplayName : "Home";
									 <li class="nav-item d-none d-md-block" id="liHelp">
										<a class="nav-link" onclick="OpenPopUpEntityHelp('addPopupHelpUni', 'dvPopupHelpUni', @Html.Raw("'" + Url.Action("QuickHelp", "PropertyHelpPage") + "'"), '@EntNameHelp' , '' , '' , '@DisplayStringHelp' )" style="cursor: pointer;">
											<i class="fa fa-question"></i>
										</a>
									</li>
						}
						      <li class="nav-item d-none d-md-block" id="Lnk_Print">
            @{
                string CurrentURL = Request.Url.AbsoluteUri;
            }

            @{
                if (CurrentURL.Contains("Edit"))
                {
                    <a class="nav-link" id="printButton" title="Print">
                        <i class="fa fa-print">  </i>
                    </a>
                }
                else
                {
                    <a class="nav-link" href="#" onclick="window.print();return false;" title="Print">
                        <i class="fa fa-print">  </i>
                    </a>
                }
            }


        </li>
							<li class="nav-item dropdown" id="lnkAdd">
          <a class=" nav-link" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="cursor: pointer;"><i class="fa fa-plus"> </i></a>
          <ul class="dropdown-menu dropdown-menu-right adhfix" aria-labelledby="navbarDropdownMenuLink">

		 					@if ( User.CanAdd("T_Customer") && User.CanView("T_Customer"))
					{
						var EntityReflectorObj = entityModel.FirstOrDefault(p => p.Name == "T_Customer");
                        var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Customer";
						<li id="liT_Customer" class="dropdown-item @(currentController == "T_Customer" ? "active" : "")" alt="@DisplayString" title="@DisplayString">
                            <a href="@Url.Action("Create","T_Customer", new { EntityName="T_Customer"})">
							<i class="fa fa-list mr-2"></i> 
							<span class="nav-label">@DisplayString </span>
							</a>
                        </li>
					 }
		  </ul>
</li>
		<li class="nav-item dropdown" id="lnkSearch">
            <a class="nav-link" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true" style="cursor: pointer;">
			<i class="fa fa-search"> </i> 
			</a>
            <div class="dropdown-menu shadow  dropdown-menu-right animated float-lg-left" aria-labelledby="navbarDropdownMenuLink" style="width:500px;padding:0px;">
                <h5 class="bg-primary p-2">
                    Entity Search
                </h5>
                <div class="row m-2">
                    <div class="col-md-8">
                        @Html.TextBox("entity_search", null, new { @class = "form-control fixsearchbox", @placeholder = "Please enter a value to search" })
                    </div>
                    <div class="col-md-4">
                        <div class="dropdown topsearch">
                            <a class="btn btn-white dropdown-toggle w-100" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">Search In</a>
                            <ul class="dropdown-menu sdhfix" aria-labelledby="dropdownMenuButton">
     
                                @if (User.CanView("T_Customer"))
                                {
                                    var EntityReflectorObj = entityModel.FirstOrDefault(p => p.Name == "T_Customer");
                                    var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Customer";
                                    <li id="liT_Customer" class="dropdown-item @(currentController == "T_Customer" ? "active" : "")" alt="@DisplayString" title="@DisplayString">
                                        <a onclick="SearchValueInEntity('T_Customer')">
                                            <span class="nav-label">@DisplayString </span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </li>

   
						//@if (maintenancemode)
                        //{
                           //<li>
                                //<a class="dropdown-toggle" data-toggle="dropdown" href="#" style="color:#ffbe00 !important;" alt="Under Maintenance" title="Under Maintenance">
                                    //<span class="fa fa-bell-o text-warning" style="font-size:14px"> Under Maintenance </span>
                                //</a>
								//<ul class="dropdown-menu dropdown-user">
								//<li>
								  //<a href="#" style="color:black;">  @commonObj.MaintenanceModeAlertMessage()</a>
								//</li>
								//</ul>
                            //</li>
                        //}
                        
						
@if (User.HasAdminPrivileges())
                        {
                            <li class="nav-item d-none d-md-block">
                                <a class="nav-link" href="@Url.Action("Index", "Admin")" title="Application Settings" alt="Application Settings">
                                    <i class="fa fa-cog"> </i>
                                </a>
                                <!-- /.dropdown-user -->
                            </li>
                        }	
					<li class="nav-item dropdown dropdown-list">
                           <a class="nav-link dropdown-toggle" href="#" data-toggle="dropdown" aria-expanded="false">
                           <em class="fa fa-user"></em>
                           </a><!-- START Dropdown menu-->
                           <div class="dropdown-menu dropdown-menu-right animated flipInX">
                               <div class="dropdown-item">
                                   <!-- START list group-->
                                   <div class="list-group">
                                       <!-- list item-->
                                       <div class="item user-block">
                                           <!-- User picture-->
                                           <div class="user-block-picture">
                                               <div class="user-block-status">
                                                        <img class="img-thumbnail rounded-circle" src="@ProfilePic" alt="Avatar" width="60" height="60">
                                                   <div class="circle bg-success circle-lg"></div>
                                               </div>
                                           </div><!-- Name and Job-->
                                           <div class="user-block-info">
                                               <span class="user-block-name">Hello, @User.Name </span>
                                               <span class="user-block-role">@ViewBag.Useremail</span>
                                               <span class="user-block-role">
												    			@if ( User != null && !(User.userroles.Count() > 1 && Request.Cookies[AppUrl + "CurrentRole"] == null))
            {
                        if (User != null &&  !(User.userroles.Count() > 1 && Request.Cookies[AppUrl + "CurrentRole"] == null))
                        {
							<span class="block m-t-xs"> Role : @string.Join(", ", User.userroles) </span>
                        }
            }
                                               </span>
                                           </div>
                                       </div>
									@if(!(User.Identity is System.Security.Principal.WindowsIdentity) && User.CanView("ApplicationUser"))
									{
									<div class="list-group-item list-group-item-action">
                                           <div class="media">
                                               <div class="align-self-start mr-2"><em class="fa fa-user-check fa-2x text-info"></em></div>
                                               <div class="media-body">
                                                   <a href="@Url.Action("UserProfile", "Account", new { UrlReferrer = Request.Url.PathAndQuery })" class="m-0">Profile</a>
                                                   <p class="m-0 text-muted text-sm">Profile.</p>
                                               </div>
                                           </div>
                                       </div>
									 }
                                       <div class="list-group-item list-group-item-action">
                                           <div class="media">
                                               <div class="align-self-start mr-2"><em class="fa fa-key fa-2x text-info"></em></div>
                                               <div class="media-body">
                                                   <a href="@Url.Action("Manage", "Account")" class="m-0">Change Password</a>
                                                   <p class="m-0 text-muted text-sm">Change application password.</p>
                                               </div>
                                           </div>
                                       </div><!-- list item-->
                                       <div class="list-group-item list-group-item-action">
                                           <div class="media">
                                               <div class="align-self-start mr-2"><em class="fa fa-list-alt fa-2x text-warning"></em></div>
                                               <div class="media-body">
                                                   <a href="@Url.Action("About", "Home")" class="m-0">About Application</a>
                                                   <p class="m-0 text-muted text-sm">View application description.</p>
                                               </div>
                                           </div>
                                       </div><!-- list item-->
                                       <div class="list-group-item list-group-item-action">
                                           <div class="media">
                                               <div class="align-self-start mr-2"><em class="fa fa-comment fa-2x text-success"></em></div>
                                               <div class="media-body">
                                                   @if (User.CanView("ApplicationFeedback"))
                                                   {
                                                    <a href="@Url.Action("Index", "ApplicationFeedback")" class="m-0"> Application Feedback</a>
													<p class="m-0 text-muted text-sm">View total feedback.</p>
                                                   }
                                               </div>
                                           </div>
                                       </div>
									    @if (Request.Cookies[AppUrl + "CurrentRole"] != null)
												   {
										<div class="list-group-item list-group-item-action">
											<div class="media">
												<div class="align-self-start mr-2"><em class="fa fa-user-cog fa-2x text-info"></em></div>
												<div class="media-body">
													<a class="m-0" href="@Url.Action("SwitchRole", "Account")">
														Change Role
													</a>
													<p class="m-0 text-muted text-sm">Change application role.</p>
												</div>
											</div>
										</div>
										 }
									   <!-- last list item-->
                                       <div class="list-group-item list-group-item-action">
                                           <div class="media">
                                               <div class="align-self-start mr-2"><em class="fa fa-window-close fa-2x text-danger"></em></div>
                                               <div class="media-body">
										  @{var logoff  =Url.Action("LogOff", "Account");}
											<form action="@logoff" method="post" id="logoutForm">
												@Html.AntiForgeryToken()
												 <a id="logoutbtn1" class="m-0"> Logout</a>
											<script>
											$(function () {
												$("#logoutbtn1").click(function (e) {
													$("#logoutForm").submit();
												});
											});
											</script>
											</form>
                                                   <p class="m-0 text-muted text-sm">Exit from application.</p>
                                               </div>
                                           </div>
                                       </div><!-- last list item-->
                                       <div class="list-group-item list-group-item-action">
                                       <span class="d-flex align-items-center">
                                          
							@if ((new GeneratorBase.MVC.Models.UserBasedSecurityContext()).UserBasedSecurities.Count() > 0)
                            {
                                    <span class="text-sm" alt ="Security Filter is Active" title="Security Filter is Active"> Security Filter is Active</span>
                            }
                                          </span>
                                       </div>
                                   </div><!-- END list group-->
                               </div>
                           </div><!-- END Dropdown menu-->
                       </li>
                    </ul>
                </nav>
				</header>
                @if (menudisplay)
{
    <nav class="navbar navbar-expand-lg TopNav">
         <button class="navbar-toggler btn btn-link d-md-none rounded-circle mr-3" type="button" data-toggle="collapse" data-target="#main_nav" style="position: absolute; top: -40px; left: 5px; z-index: 99999; background: white; background: #333333; color: white;">
        <i class="fa fa-bars"></i>
    </button>
        <div class="collapse navbar-collapse" id="main_nav">
            <ul class="navbar-nav">
                 <li class="nav-item" id="lnkDefaultDashboard" style="display:none">
        <a href="@Url.Action("Dashboard", "Home")" class="dropdown-item @(currentController == "Dashboard" ? "active" : "")" >
            <i class="nav-icon fas fa-desktop float-start mt-1 mr-1"></i>

            Dashboard
        </a>
    </li>

                @if (userSideBar != null && userSideBar.Count() > 0)
{
    var menuItems = userSideBar.SelectMany(s => s.T_MenuBarMenuItemAssociation_t_menubar.OrderBy(o => o.T_OrderNumber)).Distinct();
    var menuItemsList = menuItems.Select(s => s.t_menuitem);
    Html.RenderPartial("~/Views/Shared/_TopBarMenu.cshtml", menuItemsList); 
}
else
{

			 		if ( User.CanView("T_Customer"))
					{
						var EntityReflectorObj = entityModel.FirstOrDefault(p => p.Name == "T_Customer");
                        var DisplayString = EntityReflectorObj != null ? EntityReflectorObj.DisplayName : "Customer";
						<li id="liT_Customer" class="nav-item" alt="@DisplayString" title="@DisplayString">
                            <a href="@Url.Action("RedirectToEntity","Home", new { EntityName="T_Customer"})" class="dropdown-item @(currentController == "T_Customer" ? "active" : "")">
							
							<i class="fa fa-briefcase float-start mt-1 mr-1"></i> 
							@DisplayString 
							</a>
                        </li>
					 }
}
             </ul>
        </div> <!-- navbar-collapse.// -->
    </nav>
}
@if (maintenancemode)
{
    <div class="alert alert-mantainance alert-dismissible fade show" role="alert" style="margin: 10px 25px 5px 25px">
        <strong>Under Maintenance</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <br />
        @commonObj.MaintenanceModeAlertMessage()
    </div>
}
				<script>
    function favorite() {
        $('#liFavorite').addClass("dropdown").removeClass("dropdown open");
        var thelink = "@Url.Action("FavoriteSave", "Home")";
        var data = $('#Favorite').val();
        $('#lblFavoriteSuceeess').text("");
        if (data == "") {
            $('#lblFavoriteSuceeess').text("Favorite Name is required.");
            return false;
        }
        $.ajax({
            url: thelink,
            cache: false,
            data: { Id: $('#hdnFavorite').val(), Name: $('#Favorite').val(), FavoriteUrlEntityName: '@currentController', FavoriteUrl: '@Html.Raw(commonObj.getBaseForFavoriteUri())' },
            success: function (data) {
                if (data == "success") {
                    $('.fa.fa-1x.fa-star').css('color', '#F90');
                    $('#liFavorite').addClass("dropdown").removeClass("dropdown open");
                    $('#Favorite').val('');
                }
                if (data == "error") {
                    $('.fa.fa-1x.fa-star').css('color', '#FFF');
                    $('#lblFavoriteSuceeess').addClass("warning").removeClass("success");
                    $('#lblFavoriteSuceeess').text("Url not added in favourite.");
                    $('#Favorite').val('');
                }
            }
        })
        return true;
    }
</script>
<script type="text/javascript">
		function SearchValueInEntity(entity) {
                var txtval = $("#entity_search").val();
                var url = '@Html.Raw(Url.Action("Index", "EntityName"))'.replace("EntityName", entity);
                url = url + "?searchString=" + txtval + "&IsDeepSearch=true&parent=Home";
                window.location.href = url;
            }
    </script>

@if (menudisplay && userSideBar != null && userSideBar.Count() > 0)
{
    <script type="text/javascript">
        $(document).ready(function () {
            var collapseid = $("#accordionSidebar .active").parent().attr("id");
            getcollapseParent(collapseid);
        });

        function getcollapseParent(collapseid) {
            uncollaseParent(collapseid);
            var collapseparentid = $("#accordionSidebar #" + collapseid).parent().attr("id");
            if (collapseparentid != undefined && collapseparentid != 'accordionSidebar') {
                getcollapseParent(collapseparentid);
            }
        }

        function uncollaseParent(collapseid) {
            if (collapseid != undefined) {
                if ($("#" + collapseid).hasClass("nav-item")) {
                    $("#" + collapseid).addClass("active")
                }
                $("#a" + collapseid).click();
            }
        }
    </script>
}<script src="~/Scripts/bootstrap.responsive-collapse.js"></script>
    <script type="text/javascript">
        $(window).on('load',function () {
            $('ul.navbar-nav').responsiveCollapse();
        });
    </script>
