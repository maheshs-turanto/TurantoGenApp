@model GeneratorBase.MVC.Models.T_MenuBar
@{
 ViewBag.Title = "Bulk Update Menu Bar";
    Layout = null;
	var EntityDisplayNameReflector = ModelReflector.Entities.FirstOrDefault(p => p.Name == "T_MenuBar");
	var businessrule = User.businessrules.Where(p => p.EntityName == "T_MenuBar").ToList();
    bool IsAlwaysHidden = false;
    bool IsAlwaysSetValue = false;
    bool IsAlwaysReadOnly = false;
    if (businessrule != null && businessrule.Count() > 0)
    {
        var lstBR = businessrule;
        foreach (var BR in lstBR)
        {
            foreach (var objcond in BR.ruleaction)
            {
                long? _raid = objcond.AssociatedActionTypeID;
                var objConditionList = BR.ruleconditions.Where(con => con.RuleConditionsID == objcond.RuleActionID).Where(p=>p.PropertyName=="Id"  && p.Operator == ">" && p.Value == "0") ;
                foreach (var BRCon in objConditionList)
                {
                    if (_raid == 6)
                    {
                            IsAlwaysHidden = true;
                    }
                    if (_raid == 7)
                    {
                            IsAlwaysSetValue = true;
                    }
                    if (_raid == 4)
                    {
                            IsAlwaysReadOnly = true;
                    }
                }
            }
        }
    }
}
@if (IsAlwaysHidden)
{ 
    if (!string.IsNullOrEmpty(ViewBag.T_MenuBarIsHiddenRule))
    {
        @Html.Raw(ViewBag.T_MenuBarIsHiddenRule);
    }
 }
<script>
    $(document).ready(function () {
       LockHostDropdownOnEdit('@Convert.ToString(ViewData["AssociatedType"])');
    });
</script>
<script>
    $(document).ready(function () {
        $('.form-control:input').change(function () {
            var $this = $(this);
            $("input[type=checkbox][value=" + $this.attr('id') + "]").prop("checked", $this.val() != '' ? true : false);
            var ChildDDids = $this.attr('ChildDDids');
            if (ChildDDids != undefined) {
                var ids = ChildDDids.split(",");
                for (var i = 0; i < ids.length; i++) {
                    $("input[type=checkbox][value=" + ids[i] + "]").prop("checked", $this.val() != '' ? true : false);
                }
            }
        })
    });
</script>
<link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<link href="@Url.Content("~/Content/chosen.css")" rel="stylesheet" type="text/css" />
@using (Html.BeginForm("BulkUpdate", "T_MenuBar", new { UrlReferrer = Convert.ToString(ViewData["T_MenuBarParentUrl"]), IsDDAdd = ViewBag.IsDDAdd }, FormMethod.Post, new { enctype = "multipart/form-data", @id = "frmT_MenuBar" }))
{
   @Html.AntiForgeryToken();
   @Html.Hidden("BulkUpdate", (object)ViewBag.BulkUpdate);
	<div class="alert alert-danger" style="margin-top:-10px;">
        <strong>Warning!</strong> This action updates all the selected records.
        Select the desired properties from the checkbox list in the pop-up window.
        Click "Update" to proceed with modification action of the selected properties.
    </div>
	<div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="AppForm">
               
                   <table class="table table-striped default-bordered table-hover default-condensed">
                        <thead>
                            <tr>
                                <th style="width:70px">Select to update property</th>
                                <th>Property Name</th>
                                <th>Set Value of Property</th>
                            </tr>
							 @if(User.CanView("T_MenuBar","T_AutoNo"))
								{
<tr id="dvT_AutoNo">
                <td align="center"><input type="checkbox" name="chkUpdate" value="T_AutoNo" /></td>
                <td>@Html.LabelFor(model => model.T_AutoNo)</td>
				<td> @Html.TextBoxFor(model => model.T_AutoNo, new { @class = "form-control" })
				</td></tr>
				}
 @if(User.CanView("T_MenuBar","T_Name"))
								{
<tr id="dvT_Name">
                <td align="center"><input type="checkbox" name="chkUpdate" value="T_Name" /></td>
                <td>@Html.LabelFor(model => model.T_Name)</td>
				<td> @Html.TextBoxFor(model => model.T_Name, new { @class = "form-control" })
				</td></tr>
				}
@if(User.CanView("T_MenuBar","T_Disabled"))
								{
<tr id="dvT_Disabled">
                <td align="center"><input type="checkbox" name="chkUpdate" value="T_Disabled" /></td>
                <td>@Html.LabelFor(model => model.T_Disabled)</td>
 <td>@Html.CheckBox("T_Disabled", false) (Value of property is "true" if checkbox is checked else "false" it it's unchecked.)
 
 </td></tr>
 }
@if(User.CanView("T_MenuBar","T_Horizontal"))
								{
<tr id="dvT_Horizontal">
                <td align="center"><input type="checkbox" name="chkUpdate" value="T_Horizontal" /></td>
                <td>@Html.LabelFor(model => model.T_Horizontal)</td>
 <td>@Html.CheckBox("T_Horizontal", false) (Value of property is "true" if checkbox is checked else "false" it it's unchecked.)
 
 </td></tr>
 }
                        </thead>
                    </table>

 </div>
  </div>
   </div>
   <button id="CancelQuickAdd" type="button" class="btn btn-default btn-sm" data-dismiss="modal" aria-hidden="true">Cancel</button>
    if (ViewBag.IsDDAdd == null && User.CanEdit("T_MenuBar"))
    {
        <input type="submit" value="Update" class="btn btn-primary btn-sm" />
    }
    <br /><br />
	}
<script src="~/Scripts/Common3/chosen.jquery.js" type="text/javascript"></script>
<script type="text/javascript">
    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: "95%" }
    }
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
</script>
<script>
    $(function () {
        ApplyAreYouSure();
    });
</script>

@{
    if ((businessrule != null && businessrule.Count > 0 && IsAlwaysReadOnly))
    {
        var typelist = string.Join(",", businessrule.SelectMany(p => p.ActionTypeID).Distinct().ToList());
        <script>
            $(document).ready(function () {
                document.getElementById("ErrMsg").innerHTML = "";
                var flag = true;
                var dataurl = "";
                var form = "";
                var inlinecount = "0";
                form = $("#frmT_MenuBar");
                dataurl = "@Url.Action("businessruletype", "T_MenuBar", new { ruleType = "OnEdit"})";
                ApplyBusinessRuleOnPageLoad("@typelist", dataurl, "T_MenuBar", false, "ErrMsg", form);

            });
        </script>
    }
if (IsAlwaysSetValue)
    {
     if (!string.IsNullOrEmpty(ViewBag.T_MenuBarIsSetValueUIRule))
		{
        @Html.Raw(ViewBag.T_MenuBarIsSetValueUIRule);
		}
    }
}

    
