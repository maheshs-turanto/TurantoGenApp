@model GeneratorBase.MVC.Models.ReportList
@using PagedList;
@{
    ViewBag.Title = "View SSRS Report";
	var EntityDisplayNameReflector = ModelReflector.Entities.FirstOrDefault(p => p.Name == "ReportList");
    var EntityDisplayName = EntityDisplayNameReflector != null ? EntityDisplayNameReflector.DisplayName : "SSRS Report";
}
<script>
    $(document).ready(function () {
			 if ($.cookie('@User.JavaScriptEncodedName@Model.Id' + 'TabCookie') != null) {
				$('a[href="#' + $.cookie('@User.JavaScriptEncodedName@Model.Id' + 'TabCookie') + '"]').click();
			 }
    });
</script>
@{
    if (!string.IsNullOrEmpty(ViewBag.ReportListIsHiddenRule))
    {
        @Html.Raw(ViewBag.ReportListIsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.ReportListIsGroupsHiddenRule))
    {
        @Html.Raw(ViewBag.ReportListIsGroupsHiddenRule);
    }
}
@{
    if (!string.IsNullOrEmpty(ViewBag.ReportListIsSetValueUIRule))
    {
        @Html.Raw(ViewBag.ReportListIsSetValueUIRule);
    }
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-6">
        <ol class="breadcrumb">
            <li>
               <strong><a href="@Url.Action("Index")"> @EntityDisplayName</a></strong>
            </li>
            <li class="active">
                Details
            </li>
			<li class="active">
              <span class="EntityDisplayName"> @Html.DisplayFor(model => model.DisplayValue)</span>
            </li>
        </ol>
    </div>
    <div class="col-lg-6">
			<div class="btn-group pull-right fixactionbut" style="margin:0px 0px 0px 0px;">
            <button data-toggle="dropdown" class="btn btn-primary btn-xs dropdown-toggle pull-right">
                Action
                <span class="caret">    </span>
            </button>
			<ul class="dropdown-menu pull-left">               
				<li>
                    @if ( User.CanEdit("ReportList"))
                    {
                        <a href="@Url.Action("Edit", "ReportList", new { UrlReferrer = Request.UrlReferrer.PathAndQuery, id = Model.Id, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null)"><i class="glyphicon glyphicon-edit"></i>  Edit</a>
                    }
                </li>             
				<li>
                    @if ( User.CanDelete("ReportList"))
                    {
                        <a href="@Url.Action("Delete", "ReportList", new { UrlReferrer = Request.UrlReferrer.PathAndQuery, id = Model.Id, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, null)"><i class="glyphicon glyphicon-remove-sign"></i>  Delete</a>
                    }
                </li>
			</ul>
   </div>
</div>
</div>
<div class="wrapper wrapper-content animated fadeInRight ecommerce">
            <div class="tabs-container">
    <ul class="nav nav-tabs">
	 <li class="active"><a href="#Details" onclick="ClearTabCookie('@User.JavaScriptEncodedName@Model.Id');" data-toggle="tab">Details</a></li>
    </ul>
	  @Html.HiddenFor(model => model.Id)
	    <div class="tab-content">
		   <div class="tab-pane fade in active" id="Details">
				 <div class="panel panel-default AppForm">
					<div class="panel-body">

			<div class="row">

@if(User.CanView("ReportList","ReportNo")  )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvReportNo">
	<div class='form-group' title="@Model.ReportNo">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.ReportNo) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
						<p id="lblReportNo" class="viewlabel">@Model.ReportNo</p>
								</div>
	</div>
</div>
}
@if(User.CanView("ReportList","DisplayName")  )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvDisplayName">
	<div class='form-group' title="@Model.DisplayName">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.DisplayName) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
						<p id="lblDisplayName" class="viewlabel">@Model.DisplayName</p>
								</div>
	</div>
</div>
}
@if(User.CanView("ReportList","Description"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvDescription">
	<div class='form-group' title="@Model.Description">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.Description)</label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		<p class="viewlabelmultiline">@Model.Description</p>
		</div>
	</div>
</div>
}
@if(User.CanView("ReportsGroup") && User.CanView("ReportList","ReportsGroupSSRSReportAssociationID"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvReportsGroupSSRSReportAssociation">
	<div class='form-group' >
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.ReportsGroupSSRSReportAssociationID)</label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		@if (@Model.ReportsGroupSSRSReportAssociationID == 0 || @Model.ReportsGroupSSRSReportAssociationID == null || @Model.reportsgroupssrsreportassociation == null)
		{
	         <p id="lblReportsGroupSSRSReportAssociationID" class="viewlabel"></p>
        }
        else
        {
		     <p id="lblReportsGroupSSRSReportAssociationID" class="viewlabel" title="@Model.reportsgroupssrsreportassociation.DisplayValue">@Model.reportsgroupssrsreportassociation.DisplayValue</p>
        }
		</div>
	</div>
</div>
}
@if(User.CanView("ReportList","Name")  )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvName">
	<div class='form-group' title="@Model.Name">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.Name) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
						<p id="lblName" class="viewlabel">@Model.Name</p>
								</div>
	</div>
</div>
}
@if(User.CanView("ReportList","ReportID")  )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvReportID">
	<div class='form-group' title="@Model.ReportID">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.ReportID) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
						<p id="lblReportID" class="viewlabel">@Model.ReportID</p>
								</div>
	</div>
</div>
}
@if(User.CanView("ReportList","ReportPath"))
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvReportPath">
	<div class='form-group' title="@Model.ReportPath">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.ReportPath)</label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		<p class="viewlabelmultiline">@Model.ReportPath</p>
		</div>
	</div>
</div>
}
@if(User.CanView("ReportList","IsHidden")  )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvIsHidden">
	<div class='form-group' title="@Model.IsHidden">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.IsHidden) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
				@Html.DisplayFor(model => model.IsHidden)
		</div>
	</div>
</div>
}
@if(User.CanView("ReportList","EntityName")  )
{
<div class='col-sm-6 col-md-6 col-xs-12' id="dvEntityName">
	<div class='form-group' title="@Model.EntityName">
		<label class="col-sm-5 col-md-5 col-xs-12">@Html.DisplayNameFor(model => model.EntityName) </label>
		<div class="input-group col-sm-7 col-md-7 col-xs-12">
		
						<p id="lblEntityName" class="viewlabel">@Model.EntityName</p>
								</div>
	</div>
</div>
}
		</div>
				</div>
			</div>
			<div class="row">
				<div class="col-md-12 col-sm-12 col-xs-12">
				<a class="btn btn-default btn-sm pull-left formbuttonfix" Onclick="goBack('@Url.Action("Index","ReportList")');">Back</a>
				@*@Html.ActionLink("Back", "Cancel", new { UrlReferrer = Request.UrlReferrer }, new { @class = "btn btn-default btn-sm pull-left formbuttonfix" })*@
					 @if ( User.CanEdit("ReportList"))
                     {
                          @Html.ActionLink("Edit", "Edit", new { UrlReferrer = Request.UrlReferrer.PathAndQuery, id = Model.Id, AssociatedType = ViewData["AssociatedType"], HostingEntityName = @Convert.ToString(ViewData["HostingEntity"]), HostingEntityID = @Convert.ToString(ViewData["HostingEntityID"]) }, new { @class = "btn btn-primary btn-sm pull-left formbuttonfix" })
                     }
 @{ var dropmenubottom = false; }
<div class="dropdown pull-left formbuttonfix" style="display:none;" id="AddAssociationdropmenubottomReportList">
<button type="button" class="btn btn-primary btn-sm dropdown-toggle" id="dropdownMenu1" data-toggle="dropdown">
            Add 
            <span class="caret"></span>
        </button>
		 <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
</ul>
</div>
@if(!dropmenubottom)
{
    <script>
        $("#AddAssociationdropmenubottomReportList").hide();
    </script>
}
			</div> 
			</div><div class="clearfix" style="clear:both"></div>
	</div>    
	</div> <!-- /tab-content --><br />
<br/>
</div>
</div>
 
